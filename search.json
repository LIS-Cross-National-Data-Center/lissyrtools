[{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2020 Josep Espasa Reig  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. lissyrtools Copyright (C) 2020 Josep Espasa Reig This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Gonçalo Marques. Author, maintainer. Josep Espasa Reig. Author.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Marques G, Espasa Reig J (2025). lissyrtools: Tools LISSY Jobs. R package version 0.1.12, https://lis-cross-national-data-center.github.io/lissyrtools/.","code":"@Manual{,   title = {lissyrtools: Tools for LISSY Jobs},   author = {Gonçalo Marques and Josep {Espasa Reig}},   year = {2025},   note = {R package version 0.1.12},   url = {https://lis-cross-national-data-center.github.io/lissyrtools/}, }"},{"path":[]},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Tools for LISSY Jobs","text":"package tools needed develop scripts LIS data allows users : * Read LIS data within LISSY environment, use LIS sample files locally. * Carry commonly performed data cleaning tasks. * Compute estimates microdata.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for LISSY Jobs","text":"package already installed LISSY LIS Data Center team. can install package locally work LIS Sample Datasets GitHub repo :","code":"devtools::install_github(\"https://github.com/LIS-Cross-National-Data-Center/lissyrtools\")"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Tools for LISSY Jobs","text":"lissyrtools provides users set functions embedded objects designed help users access manipulate data LIS’s remote execution system: LISSY. providing built-sample datasets lissyrtools, also encourage users develop LISSY scripts locally, debugging writing R code efficient IDEs like RStudio. Data first needs loaded using lissyuse() function. output list whose elements datasets available LIS database countries selected within specified time frame. LWS data can loaded setting `lws` argument TRUE (e.g lws = TRUE), Project dropdown adjusted “LWS” shown image :  Subsequently, list can transformed using functions lissyrtools pipeline structure, enabling users generate aggregated figures entire dataset specific subgroups.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/index.html","id":"lissy-version","dir":"","previous_headings":"Usage","what":"LISSY version","title":"Tools for LISSY Jobs","text":"","code":"library(lissyrtools)  # Load the datasets  # The output is a list whose elements are the datasets available in the LIS database for the countries selected within the specified time frame.   lis_datasets <- lissyuse(   data = \"ca\",    vars = c(\"dhi\", \"pi11\", \"age\"),    from = 2014,    to = 2019   )    # Example of further data cleaning using `transform_` functions:  lissy_datasets_transformed_pi11 <- lis_datasets %>%   transform_false_zeros_to_na(\"pi11\") %>%   transform_negative_values_to_zero(\"pi11\") %>%   transform_zeros_to_na(\"pi11\") %>%   transform_top_code_with_iqr(\"pi11\") %>%   transform_bottom_code_with_iqr(\"pi11\") %>%   transform_adjust_by_lisppp(\"pi11\") %>%   transform_restrict_age(\"pi11\", from = 16, to = 64)   lissy_datasets_transformed_dhi <- lis_datasets %>%   transform_false_zeros_to_na(\"dhi\") %>%   transform_negative_values_to_zero(\"dhi\") %>%   transform_top_code_with_iqr(\"dhi\") %>%   transform_bottom_code_with_iqr(\"dhi\") %>%   transform_equivalise(\"dhi\") %>%   transform_adjust_by_lisppp(\"dhi\")  # Compute indicators print_indicator(lissy_datasets_transformed_dhi,                              variable = \"dhi\",                              indicator = \"gini\",                              na.rm = TRUE)                               print_indicator(lissy_datasets_transformed_pi11,                              variable = \"pi11\",                              indicator = \"gini\",                              na.rm = TRUE)   # To load LWS datasets, set the argument `lws` == TRUE: lws_datasets <- lissyuse(   data = c(\"us\", \"uk17\", \"uk19\"),    vars = \"dnw\",    from = 2015,    to = 2021,   lws = TRUE )  names(lws_datasets)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/index.html","id":"local-version","dir":"","previous_headings":"Usage","what":"Local version","title":"Tools for LISSY Jobs","text":"working lissyrtools locally, use lissyuse(), along sample files made available package. equipped package 3 sample files (1 h-level 1 p-level) LIS, 2 sample files LWS: italy_14_lis_h; italy_14_lis_p; italy_14_lws_h italy_14_lws_p; united_states_16_lis_h; united_states_16_lis_p; united_states_16_lws_h united_states_16_lws_h; mexico_18_lis_h mexico_18_lis_p.","code":"library(lissyrtools)  # Example where both household-level and individual-level variables are specified in `vars` lis_datasets <- lissyuse(data = c(\"it\", \"us\", \"mx\"), vars = c(\"region_c\", \"dhi\", \"age\", \"pi11\", \"sex\")) names(lis_datasets)  # Example where only household-level are specified in `vars`  lis_datasets <- lissyuse(data = c(\"it\", \"us\", \"mx\"), vars = c(\"region_c\", \"dhi\")) names(lis_datasets)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/index.html","id":"user-support","dir":"","previous_headings":"","what":"User Support","title":"Tools for LISSY Jobs","text":"encounter bugs, typos, experience issue running jobs including packages’ tools, please email us : usersupport@lisdatacenter.org. information LIS, visit website, explore METIS metadata, check best practices job submission LISSY. Recommended checks packages offer tools data manipulation list handling: magrittr, dplyr purrr","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/add_leading_0s.html","id":null,"dir":"Reference","previous_headings":"","what":"Add leading 0s — add_leading_0s","title":"Add leading 0s — add_leading_0s","text":"used inside 'compute_lorenz_curve()'","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/add_leading_0s.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add leading 0s — add_leading_0s","text":"","code":"add_leading_0s(dataset, n_0s)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/add_unique_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Add unique ID variables when binding LIS or LWS files. — add_unique_ids","title":"Add unique ID variables when binding LIS or LWS files. — add_unique_ids","text":"Add unique ID variables binding LIS LWS files.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/add_unique_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add unique ID variables when binding LIS or LWS files. — add_unique_ids","text":"","code":"add_unique_ids(file, file_name, file_level)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/add_unique_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add unique ID variables when binding LIS or LWS files. — add_unique_ids","text":"file LIS LWS file. file_name name LIS LWS file. file_level string indicating level file. Valid inputs : 'household', 'h', 'person' 'p'.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/all.is.numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if all elements in a vector are numeric — all.is.numeric","title":"Check if all elements in a vector are numeric — all.is.numeric","text":"Function : Frank E Harrell Jr, contributions Charles Dupont many others. (2020). Hmisc: Harrell Miscellaneous. R package version 4.4-1. https://CRAN.R-project.org/package=Hmisc","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/all.is.numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if all elements in a vector are numeric — all.is.numeric","text":"","code":"# S3 method for class 'is.numeric' all(x, what = c(\"test\", \"vector\"), extras = c(\".\", \"NA\"))"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/all.values.equal.html","id":null,"dir":"Reference","previous_headings":"","what":"All values are equal  — all.values.equal","title":"All values are equal  — all.values.equal","text":"Like base::.equal(), ignoring attributes default.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/all.values.equal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"All values are equal  — all.values.equal","text":"","code":"# S3 method for class 'values.equal' all(target, current)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/apply_iqr_top_bottom_coding.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply IQR-Based Top and Bottom Coding to LIS/LWS Variables — apply_iqr_top_bottom_coding","title":"Apply IQR-Based Top and Bottom Coding to LIS/LWS Variables — apply_iqr_top_bottom_coding","text":"function performs top /bottom coding specified variable across list LIS/LWS datasets. applies interquartile range (IQR)-based rule log() transformation variable. Optionally, weights can supplied, transformation can one- two-sided.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/apply_iqr_top_bottom_coding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply IQR-Based Top and Bottom Coding to LIS/LWS Variables — apply_iqr_top_bottom_coding","text":"","code":"apply_iqr_top_bottom_coding(   data_list,   var_name,   wgt_name = NULL,   times = 3,   one_sided = NULL,   type = c(\"type_4\", \"type_2\") )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/apply_iqr_top_bottom_coding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply IQR-Based Top and Bottom Coding to LIS/LWS Variables — apply_iqr_top_bottom_coding","text":"data_list named list data frames, LIS LWS microdata. var_name Character string. Name variable code (e.g., \"dhi\"). wgt_name Optional character string. Name weight variable use computing weighted percentiles. times Numeric. IQR multiplier determining bounds (default 3). one_sided Character. Set \"top\", \"bottom\", NULL two-sided coding. type Character. Type quantile estimator use (default \"type_4\").","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/apply_iqr_top_bottom_coding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply IQR-Based Top and Bottom Coding to LIS/LWS Variables — apply_iqr_top_bottom_coding","text":"list data frames structure data_list, var_name adjusted bounding extreme values according IQR rule.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/apply_iqr_top_bottom_coding.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply IQR-Based Top and Bottom Coding to LIS/LWS Variables — apply_iqr_top_bottom_coding","text":"function: Transforms variable log() scale (logarithmic transformation). Replaces invalid log-values (e.g. log(0) negatives) zero. Computes IQR (interquartile range) log-transformed variable using weighted percentiles. Caps values beyond \\([Q1 - times * IQR, Q3 + times * IQR]\\) original scale using exp(). Regarding LWS datasets: Datasets multiple imputations (via inum) detected automatically. Top bottom coding applied within imputation group datasets. Datasets without inum, single imputation, processed normally. warning issued variable level (e.g. household vs individual) seems inconsistent dataset structure.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/apply_iqr_top_bottom_coding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply IQR-Based Top and Bottom Coding to LIS/LWS Variables — apply_iqr_top_bottom_coding","text":"","code":"if (FALSE) { # \\dontrun{  # Import data, ideally at the level of the variable of interest. data_hhd <- lissyrtools::lissyuse(\"au\", vars = c(\"dhi\"), from = 2016)  # Default case, where top and bottom coding is performed simultaneously data_hhd[1]  %>%  purrr::map(~ .x[!is.na(.x$dhi), ]) %>%  purrr::map(~ .x %>% mutate(new_wgt = nhhmem * hwgt)) %>%  apply_iqr_top_bottom_coding(\"dhi\", \"hwgt\", times = 3) %>%   run_weighted_mean(\"dhi\", \"new_wgt\")  # Example with the use or arguments `one_sided` = {\"top\", \"bottom\"} and `type` data_hhd[1]  %>%  purrr::map(~ .x[!is.na(.x$dhi), ]) %>%  purrr::map(~ .x %>% mutate(new_wgt = nhhmem * hwgt)) %>%  apply_iqr_top_bottom_coding(\"dhi\", \"hwgt\", one_sided = \"top\", type = \"type_2\") %>%   run_weighted_mean(\"dhi\", \"new_wgt\")  # Load individual-level datasets by selecting individual-level variables, if the target variable is at the individual level (e.g., \"pilabour\") data_ind <- lissyrtools::lissyuse(\"au\", vars = c(\"pilabour\", \"emp\"), from = 2016)  data_ind[1]  %>%  purrr::map(~ .x[!is.na(.x$pilabour), ] %>% filter(emp ==1)) %>%  apply_iqr_top_bottom_coding(\"pilabour\", \"ppopwgt\") %>%   run_weighted_percentiles(\"pilabour\", \"ppopwgt\", probs = seq(0.1, 0.9,0.1)) } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/apply_oecd_equivalisation.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply OECD Equivalence Scale to a Variable — apply_oecd_equivalisation","title":"Apply OECD Equivalence Scale to a Variable — apply_oecd_equivalisation","text":"function adjusts household-level variable (income consumption) using either standard modified OECD equivalence scale. accounts household composition assigning different weights additional adults children.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/apply_oecd_equivalisation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply OECD Equivalence Scale to a Variable — apply_oecd_equivalisation","text":"","code":"apply_oecd_equivalisation(data_list, var_name, modified = TRUE)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/apply_oecd_equivalisation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply OECD Equivalence Scale to a Variable — apply_oecd_equivalisation","text":"data_list named list data frames, LIS LWS microdata. var_name string. name variable equivalised. modified Logical. TRUE (default), modified OECD scale used (0.5 additional adults, 0.3 children). FALSE, original OECD scale applied (0.7 additional adults, 0.5 children).","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/apply_oecd_equivalisation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply OECD Equivalence Scale to a Variable — apply_oecd_equivalisation","text":"list data frames equivalised variable.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/apply_oecd_equivalisation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply OECD Equivalence Scale to a Variable — apply_oecd_equivalisation","text":"OECD equivalence scale adjusts household income consumption reflect differences household needs. requires: nhhmem: total number household members, (always loaded default already) nhhmem13: number household members 14 years old scale computed : Standard: 1 + 0.7 × (additional adults) + 0.5 × (children 14) Modified: 1 + 0.5 × (additional adults) + 0.3 × (children 14)","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/apply_oecd_equivalisation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply OECD Equivalence Scale to a Variable — apply_oecd_equivalisation","text":"","code":"if (FALSE) { # \\dontrun{ # Import data, ideally at the level of the variable of interest. # The variable \"nhhmem13\" must be imported in advance in order to apply OECD-type equivalisation methods. data_hhd_with_nhhmem13 <- lissyrtools::lissyuse(\"it\", vars = c(\"dhi\", \"nhhmem13\"), from = 2010)  # No equivalisation case data_hhd  %>%  purrr::map(~ .x %>% filter(!is.na(dhi))) %>%  run_weighted_mean(\"dhi\", \"hpopwgt\")    # Default case: modified OECD scale equivalisation data_hhd_with_nhhmem13  %>%  purrr::map(~ .x %>% filter(!is.na(dhi))) %>%  apply_oecd_equivalisation(\"dhi\") %>%   run_weighted_mean(\"dhi\", \"hpopwgt\")    # Standard OECD scale equivalisation data_hhd_with_nhhmem13  %>%  purrr::map(~ .x %>% filter(!is.na(dhi))) %>%  apply_oecd_equivalisation(\"dhi\", modified = FALSE) %>%   run_weighted_mean(\"dhi\", \"hpopwgt\")  } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/apply_ppp_adjustment.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust Monetary Variables for Inflation and PPP — apply_ppp_adjustment","title":"Adjust Monetary Variables for Inflation and PPP — apply_ppp_adjustment","text":"Applies price adjustments monetary variable list LIS/LWS datasets using LIS-provided deflators. Adjustments can made domestic inflation (CPI), purchasing power parity (PPP), (lisppp).","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/apply_ppp_adjustment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust Monetary Variables for Inflation and PPP — apply_ppp_adjustment","text":"","code":"apply_ppp_adjustment(data_list, var_name, database, transformation = \"lisppp\")"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/apply_ppp_adjustment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust Monetary Variables for Inflation and PPP — apply_ppp_adjustment","text":"data_list named list data frames, LIS LWS microdata. var_name string. name monetary variable adjusted. database string, either \"lis\" \"lws\", indicating source database. Required determining handle deflators income reference years. transformation string specifying type adjustment: \"lisppp\" (default): Adjusts CPI PPP. \"cpi\": Adjusts domestic inflation (CPI). \"ppp\": Adjusts purchasing power parity (PPP), cross-country comparability.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/apply_ppp_adjustment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust Monetary Variables for Inflation and PPP — apply_ppp_adjustment","text":"list data frames, specified variable adjusted based chosen transformation.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/apply_ppp_adjustment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adjust Monetary Variables for Inflation and PPP — apply_ppp_adjustment","text":"LWS datasets income variables, function accounts discrepancies survey years income reference years. merges appropriate deflator tables applying requested adjustment. Important: using \"ppp\" \"lisppp\" transformations, monetary values converted original currency. adjustments intended support cross-country comparability, result longer expressed national currency units.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/apply_ppp_adjustment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust Monetary Variables for Inflation and PPP — apply_ppp_adjustment","text":"","code":"if (FALSE) { # \\dontrun{  library(lissyrtools)  # --- Example 1: CPI Adjustment (Domestic Inflation, Italy) ---  it_data <- lissyuse(\"it\", vars = \"dhi\", from = 2010) run_weighted_mean(it_data, var_name = \"dhi\")  # Nominal income  it_data_cpi <- apply_ppp_adjustment(it_data, \"dhi\", database = \"lis\", transformation = \"cpi\") run_weighted_mean(it_data_cpi, var_name = \"dhi\")  # Real income (CPI-adjusted, base year = 2017)   # --- Example 2: PPP Adjustment Across Countries (France, Poland, US, UK, Mexico in 2016) --- multi_2016 <- lissyuse(c(\"fr16\", \"pl16\", \"us16\", \"uk16\", \"mx16\"), vars = \"dhi\") run_weighted_mean(multi_2016, var_name = \"dhi\")  # Nominal  multi_2016_ppp <- apply_ppp_adjustment(multi_2016, \"dhi\", database = \"lis\", transformation = \"ppp\") run_weighted_mean(multi_2016_ppp, var_name = \"dhi\")  # PPP-adjusted   # --- Example 3: LIS PPP (Across Time and Countries: Canada & Mexico, 2015–2020) --- can_mex <- lissyuse(c(\"ca15\", \"ca18\", \"ca20\", \"mx16\", \"mx18\", \"mx20\"), vars = \"dhi\") run_weighted_mean(can_mex, var_name = \"dhi\")  # Nominal  can_mex_lisppp <- apply_ppp_adjustment(can_mex, \"dhi\", database = \"lis\", transformation = \"lisppp\") run_weighted_mean(can_mex_lisppp, var_name = \"dhi\")  # Fully deflated (real + PPP)   # --- Example 4: Reference Year Differences in Same Survey Year (Germany 2017, LIS vs LWS) --- lis_de17 <- lissyuse(\"de17\", vars = \"dhi\") lws_de17 <- lissyuse(\"de17\", vars = c(\"dhi\", \"dnw\"), lws = TRUE)  apply_ppp_adjustment(lis_de17, \"dhi\", database = \"lis\", transformation = \"lisppp\")[[1]] %>% dplyr::summarise(mean_cpi_lis = mean(cpi))  apply_ppp_adjustment(lws_de17, \"dhi\", database = \"lws\", transformation = \"lisppp\")[[1]] %>% dplyr::summarise(mean_cpi_lis = mean(cpi))  # Even with the same survey year (DE17), different income reference years are accounted for automatically. } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/apply_sqrt_equivalisation.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Square-Root Equivalisation to a Variable — apply_sqrt_equivalisation","title":"Apply Square-Root Equivalisation to a Variable — apply_sqrt_equivalisation","text":"function adjusts household-level variable (e.g., \"dhi\", \"hicapital\") household size using square-root scale equivalisation method. divides variable number household members raised power (eq_scale), defaults 0.5 (.e., square root equivalence scale).","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/apply_sqrt_equivalisation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Square-Root Equivalisation to a Variable — apply_sqrt_equivalisation","text":"","code":"apply_sqrt_equivalisation(data_list, var_name, eq_scale = 0.5)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/apply_sqrt_equivalisation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Square-Root Equivalisation to a Variable — apply_sqrt_equivalisation","text":"data_list named list data frames, LIS LWS microdata. var_name string. name variable equivalised. eq_scale numeric value 0 1. equivalence scale apply. Defaults 0.5, corresponding square-root equivalisation.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/apply_sqrt_equivalisation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Square-Root Equivalisation to a Variable — apply_sqrt_equivalisation","text":"list data frames equivalised variable.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/apply_sqrt_equivalisation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply Square-Root Equivalisation to a Variable — apply_sqrt_equivalisation","text":"function assumes dataset contains column named nhhmem representing number household members. column missing, function stops error. also issues warning target variable detected individual-level variable, since equivalisation typically applied household-level measures.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/apply_sqrt_equivalisation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Square-Root Equivalisation to a Variable — apply_sqrt_equivalisation","text":"","code":"if (FALSE) { # \\dontrun{ # Import data, ideally at the level of the variable of interest. data_hhd <- lissyrtools::lissyuse(\"it\", vars = c(\"dhi\"), from = 2010)  # No equivalisation case data_hhd  %>%  purrr::map(~ .x %>% filter(!is.na(dhi))) %>%  run_weighted_mean(\"dhi\", \"hpopwgt\")   # Default case: square-root equivalisation data_hhd  %>%  purrr::map(~ .x %>% filter(!is.na(dhi))) %>%  apply_sqrt_equivalisation(\"dhi\") %>%   run_weighted_mean(\"dhi\", \"hpopwgt\") } # }"},{"path":[]},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/bind_lissy_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bind multiple LIS or LWS datasets — bind_lissy_files","text":"","code":"bind_lissy_files(lissy_files, create_unique_id = TRUE)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/bind_lissy_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bind multiple LIS or LWS datasets — bind_lissy_files","text":"lissy_files list LIS LWS files. create_unique_id Computes new variables 'unique_hid' 'unique_pid' unique row identifiers. Defaults TRUE.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/bind_lissy_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bind multiple LIS or LWS datasets — bind_lissy_files","text":"tibble stacked LIS LWS files.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/bind_lissy_files.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Bind multiple LIS or LWS datasets — bind_lissy_files","text":"Converts list LIS LWS datasets single file. Creates new 'file' variable name dataset computes unique person household identifiers 'create_unique_id = TRUE' (default). Adds attribute 'binded = TRUE' resulting tibble.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/bind_lissy_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bind multiple LIS or LWS datasets — bind_lissy_files","text":"","code":"if (FALSE) { # \\dontrun{ lissy_datasets_as_list <- read_lissy_files(c(\"fr84h\", \"fr94h\", \"fr10h\"))  lissy_datasets_as_tibble <- bind_lissy_files(lissy_datasets = lissy_datasets_as_list, create_unique_id = TRUE) } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/ccyy_to_cname.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the country name from the `ccyy“ — ccyy_to_cname","title":"Get the country name from the `ccyy“ — ccyy_to_cname","text":"Get country name `ccyy“","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/ccyy_to_cname.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the country name from the `ccyy“ — ccyy_to_cname","text":"","code":"ccyy_to_cname(ccyy)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/ccyy_to_cname.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the country name from the `ccyy“ — ccyy_to_cname","text":"ccyy character vector ccyy's","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/ccyy_to_cname.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the country name from the `ccyy“ — ccyy_to_cname","text":"character vector corresponding country names.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/ccyy_to_yyyy.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the year from the `ccyy“ — ccyy_to_yyyy","title":"Get the year from the `ccyy“ — ccyy_to_yyyy","text":"Get year `ccyy“","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/ccyy_to_yyyy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the year from the `ccyy“ — ccyy_to_yyyy","text":"","code":"ccyy_to_yyyy(ccyy)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/ccyy_to_yyyy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the year from the `ccyy“ — ccyy_to_yyyy","text":"ccyy character vector ccyy's","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/ccyy_to_yyyy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the year from the `ccyy“ — ccyy_to_yyyy","text":"numeric vector corresponding years.","code":""},{"path":[]},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/change_file_name_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Change the format of a file name — change_file_name_format","text":"","code":"change_file_name_format(file_names, to_format)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/change_file_name_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Change the format of a file name — change_file_name_format","text":"file_names string name file. to_format string desired format. can one following: 'ccyy' Two digit country, two digit year. E.g. \"fr84\" 'ccyyyy' Two digit country, four digit year. E.g. \"fr1984\" 'ccyyl' Two digit country, two digit year, one digit level ('h' 'p' household/person). E.g. \"fr84h\" 'ccyyyyl' Two digit country, four digit year, one digit level. E.g. \"fr1984h\" 'ccyyd' Two digit country, two digit year, one digit database (LIS, LWS ERFLIS - /w/e). E.g. \"fr84i\" 'ccyyyyd' Two digit country, four digit year, one digit database (LIS, LWS ERFLIS - /w/e). E.g. \"fr1984i\" 'ccyydl' Two digit country, two digit year, one digit indicating LIS, LWS ERFLIS (/w/e/r), one digit household/person. E.g. \"fr84ih\" 'ccyyyydl' Two digit country, two digit year,one digit indicating LIS, LWS ERFLIS (/w/e/r), one digit household/person. E.g. \"fr1984ih\"","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/change_file_name_format.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Change the format of a file name — change_file_name_format","text":"Converts character vector file names different format. used within 'implement_adjust_by_lisppp()', .","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/check_file_lists_contain_same_datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks if two lists have the same datasets — check_file_lists_contain_same_datasets","title":"Checks if two lists have the same datasets — check_file_lists_contain_same_datasets","text":"used within 'merge_dataset_levels()'","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/check_file_lists_contain_same_datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks if two lists have the same datasets — check_file_lists_contain_same_datasets","text":"","code":"check_file_lists_contain_same_datasets(lissy_hfiles, lissy_pfiles)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/check_input_in_weight_argument.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate the Weight Variable Input — check_input_in_weight_argument","title":"Validate the Weight Variable Input — check_input_in_weight_argument","text":"function checks validity weight variable provided user, issuing helpful message variable name end \"wgt\", expected LIS conventions.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/check_input_in_weight_argument.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate the Weight Variable Input — check_input_in_weight_argument","text":"","code":"check_input_in_weight_argument(wgt_name)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/check_input_in_weight_argument.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate the Weight Variable Input — check_input_in_weight_argument","text":"weight_var character string length 1 indicating name weight variable used.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/check_input_in_weight_argument.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate the Weight Variable Input — check_input_in_weight_argument","text":"return value. function used validation emits warning weight variable name seems unusual.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/check_missing_share.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks the share of missing values for each column acroos a list of data frames. — check_missing_share","title":"Checks the share of missing values for each column acroos a list of data frames. — check_missing_share","text":"Checks share missing values column acroos list data frames.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/check_missing_share.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks the share of missing values for each column acroos a list of data frames. — check_missing_share","text":"","code":"check_missing_share(data_list, include_zeros = FALSE)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/check_missing_share.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks the share of missing values for each column acroos a list of data frames. — check_missing_share","text":"data_list list include_zeros Logical. TRUE, values equal zero also accounted percentage missings.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/check_missing_share.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks the share of missing values for each column acroos a list of data frames. — check_missing_share","text":"list","code":""},{"path":[]},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/check_variable_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks if the variable is 'household' or 'person' level. — check_variable_level","text":"","code":"check_variable_level(variable)  safely_check_variable_level(...)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/check_variable_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks if the variable is 'household' or 'person' level. — check_variable_level","text":"variable String name variable. E.g. 'pi11', 'dhi'.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/check_variable_level.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Checks if the variable is 'household' or 'person' level. — check_variable_level","text":"Throws error checked.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/checks_compute_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform checks for 'compute' functions. — checks_compute_functions","title":"Perform checks for 'compute' functions. — checks_compute_functions","text":"Perform checks within 'compute_*()' functions. checks performed : file data.frame type object. 'varaible' column file 'variable' numeric variable. weight variable column file. 'weight' variable contains valid values (.e. different NAs 0s).","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/checks_compute_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform checks for 'compute' functions. — checks_compute_functions","text":"","code":"checks_compute_functions(file, file_name, variable, weight = NULL)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/checks_compute_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform checks for 'compute' functions. — checks_compute_functions","text":"file LIS LWS file. file_name name LIS LWS file. variable string name variable checks computed. weight string name variable 'file' used sample weights. NULL (default), checks weight variable performed.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/checks_compute_functions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform checks for 'compute' functions. — checks_compute_functions","text":"checks related 'weight' variable performed argument 'weight' NULL.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_atkinson.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Atkinson index. — compute_atkinson","title":"Compute Atkinson index. — compute_atkinson","text":"Compute Atkinson index  weights.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_atkinson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Atkinson index. — compute_atkinson","text":"","code":"compute_atkinson(   file,   file_name,   variable,   epsilon,   weight = NULL,   na.rm = FALSE )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_atkinson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Atkinson index. — compute_atkinson","text":"file LIS LWS file. file_name name LIS LWS file. variable string name variable Atkinson computed. epsilon number inequality adversion parameter. Needs epsilon > 0. weight string name variable 'file' used sample weights. na.rm boolean. Indicates NAs ignored. Defaults FALSE.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_atkinson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Atkinson index. — compute_atkinson","text":"numeric vector gini index.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_gini.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute gini index. — compute_gini","title":"Compute gini index. — compute_gini","text":"Compute gini index  weights.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_gini.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute gini index. — compute_gini","text":"","code":"compute_gini(file, file_name, variable, weight = NULL, na.rm = FALSE)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_gini.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute gini index. — compute_gini","text":"file LIS LWS file. file_name name LIS LWS file. variable string name variable gini computed. weight string name variable 'file' used sample weights. na.rm boolean. Indicates NAs ignored. Defaults FALSE.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_gini.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute gini index. — compute_gini","text":"numeric vector gini index.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_gini.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute gini index. — compute_gini","text":"","code":"if (FALSE) { # \\dontrun{ lissy_datasets <- read_lissy_files(c(\"fr84h\", \"fr94h\", \"fr10h\")) compute_gini(lissy_datasets[[\"fr1984h\"]], \"dhi\", na.rm = TRUE) } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute standard indicators. — compute_mean","title":"Compute standard indicators. — compute_mean","text":"Compute weighted mean, median percentile ratios variable.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute standard indicators. — compute_mean","text":"","code":"compute_mean(file, file_name, variable, weight = NULL, na.rm = FALSE)  compute_median(file, file_name, variable, weight = NULL, na.rm = FALSE)  compute_ratio(   file,   file_name,   variable,   ratio = c(0.9, 0.1),   weight = NULL,   na.rm = FALSE )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute standard indicators. — compute_mean","text":"file tibble data.frame LIS LWS file. file_name string name LIS LWS file. variable string name variable indicator computed. weight string name variable 'file' used sample weights. na.rm boolean. Indicates NAs ignored. Defaults FALSE. ratio vector two numeric values 0 1. Defines percentiles numerator denominator respectively. E.g. (0.9, 0.1) computes 90/10 ratio.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute standard indicators. — compute_mean","text":"numeric vector.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_percentiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute percentiles. — compute_percentiles","title":"Compute percentiles. — compute_percentiles","text":"Compute  weighted percentages LIS LWS variable. uses 'pwgt' 'hwgt' weight indicator.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_percentiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute percentiles. — compute_percentiles","text":"","code":"compute_percentiles(   file,   file_name,   variable,   breaks = seq(0, 1, 0.1),   weight = NULL,   na.rm = FALSE )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_percentiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute percentiles. — compute_percentiles","text":"file LIS LWS file. file_name name LIS LWS file. variable character vector length one indicator needs transformed. breaks numeric vector specifying percentiles computed. Defaults deciles. weight string name variable 'file' used sample weights. na.rm boolean indicating computation ignore missing values 'variable' 'weight'.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_percentiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute percentiles. — compute_percentiles","text":"data.frame two columns: 'percentile' 'value'. first contains label percentiles computed (e.g. '0.5' median, '0.2' first quintile). second contains values distribution 'variable'.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_percentiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute percentiles. — compute_percentiles","text":"","code":"if (FALSE) { # \\dontrun{ lissy_datasets <- read_lissy_files(c(\"fr84h\", \"fr94h\", \"fr10h\")) compute_percentiles(lissy_datasets[[\"fr1984h\"]], variable = \"dhi\", na.rm = TRUE) } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_poverty_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute poverty rate. — compute_poverty_rate","title":"Compute poverty rate. — compute_poverty_rate","text":"Computes weighted poverty rate LIS LWS variable.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_poverty_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute poverty rate. — compute_poverty_rate","text":"","code":"compute_poverty_rate(   file,   file_name,   variable,   times_median,   weight = NULL,   na.rm = FALSE )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_poverty_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute poverty rate. — compute_poverty_rate","text":"file LIS LWS file. file_name name LIS LWS file. variable character vector length one indicator needs transformed. times_median number factor median multiplied E.g. 0.5 poverty rate 50% median. weight string name variable 'file' used sample weights. na.rm boolean indicating computation ignore missing values 'variable' 'weight'.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_poverty_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute poverty rate. — compute_poverty_rate","text":"tibble two columns: 'percentile' 'value'. first contains label percentiles computed (e.g. '0.5' median, '0.2' first quintile). second contains values distribution 'variable'.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_poverty_rate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute poverty rate. — compute_poverty_rate","text":"uses 'pwgt' 'hwgt' weight indicator.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_poverty_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute poverty rate. — compute_poverty_rate","text":"","code":"if (FALSE) { # \\dontrun{ lissy_datasets <- read_lissy_files(c(\"fr84h\", \"fr94h\", \"fr10h\")) compute_poverty_rate(lissy_datasets[[\"fr1984h\"]], file_name = \"fr84h\", variable = \"dhi\", times_median = 0.5, na.rm = TRUE) } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_weighted_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute (Weighted) Counts or Percentages for a Categorical Variable — compute_weighted_count","title":"Compute (Weighted) Counts or Percentages for a Categorical Variable — compute_weighted_count","text":"Compute (Weighted) Counts Percentages Categorical Variable","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_weighted_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute (Weighted) Counts or Percentages for a Categorical Variable — compute_weighted_count","text":"","code":"compute_weighted_count(var, wgt = NULL, na.rm = FALSE, percent = FALSE)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_weighted_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute (Weighted) Counts or Percentages for a Categorical Variable — compute_weighted_count","text":"var column refering one categorical variables LIS LWS data frame. wgt numeric vector weights (e.g., .x$hpopwgt, .x$pwgt). Must length x. na.rm Logical; TRUE, missing values x w removed computation. Default FALSE. percent Logical; TRUE, computes weighted (non-weighted) percentages.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_weighted_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute (Weighted) Counts or Percentages for a Categorical Variable — compute_weighted_count","text":"numeric vector, category labels names.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_weighted_count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute (Weighted) Counts or Percentages for a Categorical Variable — compute_weighted_count","text":"","code":"if (FALSE) { # \\dontrun{ data <- lissyrtools::lissyuse(data = \"de20\", vars = c(\"dhi\", \"age\", \"educ\")) compute_weighted_count(data$de20$educ, na.rm = TRUE) compute_weighted_count(data$de20$educ, percent = TRUE) compute_weighted_count(data$de20$educ, na.rm = TRUE, percent = TRUE) compute_weighted_count(data$de20$educ, data$de20$ppopwgt, na.rm = TRUE, percent = TRUE) compute_weighted_count(data$de20$educ, data$de20$ppopwgt, percent = TRUE) } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_weighted_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute (Weighted) Means for a Variable — compute_weighted_mean","title":"Compute (Weighted) Means for a Variable — compute_weighted_mean","text":"Compute (Weighted) Means Variable","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_weighted_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute (Weighted) Means for a Variable — compute_weighted_mean","text":"","code":"compute_weighted_mean(var, wgt = NULL, na.rm = TRUE)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_weighted_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute (Weighted) Means for a Variable — compute_weighted_mean","text":"var column refering one variables LIS LWS data frame. wgt numeric vector weights (e.g., .x$hpopwgt, .x$pwgt). Must length x. na.rm Logical; TRUE, missing values x w removed computation. Default TRUE.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_weighted_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute (Weighted) Means for a Variable — compute_weighted_mean","text":"numeric vector.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_weighted_mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute (Weighted) Means for a Variable — compute_weighted_mean","text":"","code":"if (FALSE) { # \\dontrun{ data <- lissyrtools::lissyuse(data = \"de20\", vars = c(\"dhi\", \"age\", \"educ\")) compute_weighted_mean(data$de20$age, na.rm = TRUE) compute_weighted_mean(data$de20$dhi, data$de20$hwgt) } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_weighted_percentiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Weighted Percentiles or Share of Distribution — compute_weighted_percentiles","title":"Compute Weighted Percentiles or Share of Distribution — compute_weighted_percentiles","text":"function computes weighted percentiles numeric vector, share total value within specified percentile intervals.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_weighted_percentiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Weighted Percentiles or Share of Distribution — compute_weighted_percentiles","text":"","code":"compute_weighted_percentiles(   var,   wgt = NULL,   probs = seq(0, 1, 0.25),   na.rm = TRUE,   share = FALSE,   type = c(\"type_4\", \"type_2\") )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_weighted_percentiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Weighted Percentiles or Share of Distribution — compute_weighted_percentiles","text":"var numeric vector values (e.g., .x$dhi, .x$pi11). wgt numeric vector weights (e.g., .x$hpopwgt, .x$pwgt). Must length x. probs numeric vector probabilities 0 1 indicating percentiles compute. Default seq(0, 1, 0.25). na.rm Logical; TRUE, missing values x w removed computation. Default TRUE. share Logical; TRUE, computes share total value (e.g., .x$dhi) within interval defined probs. FALSE, returns percentile values. Default FALSE. Note: option always uses type = \"type_4\", can used toghether type = \"type_2\". type character string indicating percentile definition use. #' Either \"type_4\" (default, linear interpolation-based empirical cdf - continuous sample quantile) \"type_2\" (used Stata commands like collapse _pctile, inverse empirical distribution function averaging discontinuities - discontinuous sample quantile).","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_weighted_percentiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Weighted Percentiles or Share of Distribution — compute_weighted_percentiles","text":"named numeric vector. share = FALSE, returns weighted percentiles names corresponding percentiles (e.g., \"25%\"). share = TRUE, returns share total value percentile range (e.g., \"0-25%\").","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/compute_weighted_percentiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Weighted Percentiles or Share of Distribution — compute_weighted_percentiles","text":"","code":"if (FALSE) { # \\dontrun{ data <- lissyrtools::lissyuse(data = \"es22\", vars = c(\"dhi\", \"age\")) compute_weighted_percentiles(data$es22$dhi, data$es22$ppopwgt) compute_weighted_percentiles(data$es22$dhi, data$es22$ppopwgt, probs = c(0.03, 0.72, 0.48, .01)) compute_weighted_percentiles(data$es22$dhi, data$es22$ppopwgt, probs = c(0.03, 0.72, 0.48, .01), share = TRUE) } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/convert_list_from_ccyy_to_cc_names_yyyy.html","id":null,"dir":"Reference","previous_headings":"","what":"Rearranges a list whose elements are ccyy's into country names with numeric vectors names after its years. — convert_list_from_ccyy_to_cc_names_yyyy","title":"Rearranges a list whose elements are ccyy's into country names with numeric vectors names after its years. — convert_list_from_ccyy_to_cc_names_yyyy","text":"Rearranges list whose elements ccyy's country names numeric vectors names years.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/convert_list_from_ccyy_to_cc_names_yyyy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rearranges a list whose elements are ccyy's into country names with numeric vectors names after its years. — convert_list_from_ccyy_to_cc_names_yyyy","text":"","code":"convert_list_from_ccyy_to_cc_names_yyyy(data_list)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/convert_list_from_ccyy_to_cc_names_yyyy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rearranges a list whose elements are ccyy's into country names with numeric vectors names after its years. — convert_list_from_ccyy_to_cc_names_yyyy","text":"data_list list","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/convert_list_from_ccyy_to_cc_names_yyyy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rearranges a list whose elements are ccyy's into country names with numeric vectors names after its years. — convert_list_from_ccyy_to_cc_names_yyyy","text":"list","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/data_vars_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Variable labels — data_vars_labels","title":"Variable labels — data_vars_labels","text":"data frame containing LIS LWS variables labels.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/data_vars_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variable labels — data_vars_labels","text":"","code":"data_vars_labels"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/data_vars_labels.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Variable labels — data_vars_labels","text":"data frame 2 variables:","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/data_with_warnings.html","id":null,"dir":"Reference","previous_headings":"","what":"Variable notes — data_with_warnings","title":"Variable notes — data_with_warnings","text":"data frame indicating whether given variable one LIS/LWS datasets note specific year.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/data_with_warnings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variable notes — data_with_warnings","text":"","code":"data_with_warnings"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/data_with_warnings.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Variable notes — data_with_warnings","text":"data frame 6 variables:","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/database_character_to_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts 'i', 'w', 'e' into 'LIS', 'LWS' 'ERFLIS' — database_character_to_name","title":"Converts 'i', 'w', 'e' into 'LIS', 'LWS' 'ERFLIS' — database_character_to_name","text":"Converts '', 'w', 'e' 'LIS', 'LWS' 'ERFLIS'","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/database_character_to_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts 'i', 'w', 'e' into 'LIS', 'LWS' 'ERFLIS' — database_character_to_name","text":"","code":"database_character_to_name(x)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/datasets.html","id":null,"dir":"Reference","previous_headings":"","what":"LIS and LWS datasets — datasets","title":"LIS and LWS datasets — datasets","text":"data frame containing LIS LWS datasets can used LISSY, including characteristics.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/datasets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LIS and LWS datasets — datasets","text":"","code":"datasets"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/datasets.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"LIS and LWS datasets — datasets","text":"data frame 7 variables:","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/decide_plot_type.html","id":null,"dir":"Reference","previous_headings":"","what":"Decide plot type based on input data frame — decide_plot_type","title":"Decide plot type based on input data frame — decide_plot_type","text":"function determines appropriate plot type based structure input data frame. Use within 'plot_indicator()'","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/decide_plot_type.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Decide plot type based on input data frame — decide_plot_type","text":"","code":"decide_plot_type(results_df)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/decide_plot_type.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Decide plot type based on input data frame — decide_plot_type","text":"results_df data frame containing results indicator. Needs contain 'file', 'country', 'year' 'value' columns. Use within 'plot_indicator()","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/decide_plot_type.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Decide plot type based on input data frame — decide_plot_type","text":"character string indicating appropriate plot type. possible values : \"line\": line plot one multiple lines. \"bar\": bar plot one multiple bars.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/decide_plot_type.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Decide plot type based on input data frame — decide_plot_type","text":"function determines plot type based number countries years input data frame. data frame multiple countries multiple years, plot type line plot multiple lines. data frame multiple years one country, plot type line plot one line. data frame one year multiple countries, plot type bar plot multiple bars (sorted). data frame one year one country, plot type bar plot one bar.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/decide_plot_type.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Decide plot type based on input data frame — decide_plot_type","text":"","code":"# Create a test data frame results_df <- data.frame(   file = c(\"us2010h\", \"us2011h\", \"ca2010h\", \"ca2011h\"),   year = c(2010, 2011, 2010, 2011),   value = c(1, 2, 3, 4) )  # Determine the appropriate plot type decide_plot_type(results_df) #> [1] \"line\" # Output: \"line\""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/define_option.html","id":null,"dir":"Reference","previous_headings":"","what":"Define an option — define_option","title":"Define an option — define_option","text":"function defines option using name new option value. Can used define options programmatically.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/define_option.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define an option — define_option","text":"","code":"define_option(option_name, value)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/define_option.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define an option — define_option","text":"option_name value option.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/deflators.html","id":null,"dir":"Reference","previous_headings":"","what":"CPI and PPP deflators. — deflators","title":"CPI and PPP deflators. — deflators","text":"dataset containing Consumer Price Index (CPI) Purchasing Power Parity (PPP) deflators can used directly compare absolute monetary values across different LIS LWS datasets.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/deflators.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CPI and PPP deflators. — deflators","text":"","code":"deflators"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/deflators.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"CPI and PPP deflators. — deflators","text":"data frame 7 variables:","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/deflators.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"CPI and PPP deflators. — deflators","text":"https://www.lisdatacenter.org/resources/ppp-deflators/","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/determine_file_level.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the level of the file — determine_file_level","title":"Determine the level of the file — determine_file_level","text":"Determine level file","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/determine_file_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the level of the file — determine_file_level","text":"","code":"determine_file_level(lissy_files, files_level)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/determine_file_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the level of the file — determine_file_level","text":"lissy_files list LIS LWS files. files_level string indicating level file. Valid inputs : 'household', 'h', 'person' 'p'. NULL (default), file level retrived 'lissy_files' attributes.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/determine_file_level.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the level of the file — determine_file_level","text":"character vector level file","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/determine_weight.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine the name of the weight variable — determine_weight","title":"Determine the name of the weight variable — determine_weight","text":"Computes name weight variable based information 'lissy_files' object, 'files_level' 'variable_level'","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/determine_weight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine the name of the weight variable — determine_weight","text":"","code":"determine_weight(lissy_files, variable, files_level, variable_level)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/determine_weight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine the name of the weight variable — determine_weight","text":"lissy_files list LIS LWS files. variable character string indicating aggregate indicator needs computed. files_level string indicating level file. Valid inputs : 'household', 'h', 'person' 'p'. NULL (default), file level retrived 'lissy_files' attributes. variable_level Level variable. either 'household', 'h', 'person' 'p'. NULL (default), function try guess level variable. done comparing value 'variable' pre-set lists variables.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/determine_weight.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine the name of the weight variable — determine_weight","text":"character vector name weight variable.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/extend_breaks_min_and_max.html","id":null,"dir":"Reference","previous_headings":"","what":"Extend the minimum and maximum of a vector used for breaks — extend_breaks_min_and_max","title":"Extend the minimum and maximum of a vector used for breaks — extend_breaks_min_and_max","text":"'cut' function can sometimes fail include minimum maximum values intervals due 'floating point trap'. function modifies breaks extending lower uppermost values always includes minimum maximum.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/extend_breaks_min_and_max.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extend the minimum and maximum of a vector used for breaks — extend_breaks_min_and_max","text":"","code":"extend_breaks_min_and_max(x, breaks, extension = 1e-04)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/extend_breaks_min_and_max.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extend the minimum and maximum of a vector used for breaks — extend_breaks_min_and_max","text":"x Numeric vector values intervals include. breaks Numeric vector breaks might need extended. extension real number maximum minimum values extended originals include values 'x'.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/extract_information_from_file_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract information from file name — extract_information_from_file_name","title":"Extract information from file name — extract_information_from_file_name","text":"Extracts information regarding country, year, database level. latter two available.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/extract_information_from_file_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract information from file name — extract_information_from_file_name","text":"","code":"extract_information_from_file_name(file_name, current_format)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/extract_information_from_file_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract information from file name — extract_information_from_file_name","text":"file_name string name file. current_format string currant format.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/extract_information_from_file_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract information from file name — extract_information_from_file_name","text":"list following elements: 'country_' ('cc') 'year_' ('yyyy') 'database_' ('d') 'level_' ('l')","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/extract_information_from_file_name.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract information from file name — extract_information_from_file_name","text":"used inside 'change_file_name_format()'.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/four_digit_year.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute four digit year from two digit one. — four_digit_year","title":"Compute four digit year from two digit one. — four_digit_year","text":"Computes four digit year string two digits year.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/four_digit_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute four digit year from two digit one. — four_digit_year","text":"","code":"four_digit_year(two_digit_year)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/four_digit_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute four digit year from two digit one. — four_digit_year","text":"two_digit_year integer string value two digits (00 99).","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/four_digit_year.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute four digit year from two digit one. — four_digit_year","text":"strign four digit year.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/four_digit_year.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute four digit year from two digit one. — four_digit_year","text":"used within 'extract_information_from_file_name()'.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_country_specifc_categories.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve the categories of a country-specific variable in LIS/LWS for a given country. — get_country_specifc_categories","title":"Retrieve the categories of a country-specific variable in LIS/LWS for a given country. — get_country_specifc_categories","text":"Retrieve categories country-specific variable LIS/LWS given country.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_country_specifc_categories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the categories of a country-specific variable in LIS/LWS for a given country. — get_country_specifc_categories","text":"","code":"get_country_specifc_categories(   variable,   iso2,   from = NULL,   to = NULL,   lws = FALSE,   n_categories = FALSE )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_country_specifc_categories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the categories of a country-specific variable in LIS/LWS for a given country. — get_country_specifc_categories","text":"variable unit-length character vector containing LIS/LWS country-specific (\"_c\" suffix) variable. iso2 character vector valid iso2 code countries present LIS/LWS. numeric value representing year (inclusive) LIS/LWS datasets considered. numeric value representing year (inclusive) LIS/LWS datasets considered. lws logical value, guides tool search LIS LWS database. argument FALSE default, taking LIS databse investigated nothing specified. n_categories logical value indicating whether output number categories single country-specific variable, across entire time series given country.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_country_specifc_categories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve the categories of a country-specific variable in LIS/LWS for a given country. — get_country_specifc_categories","text":"list made character vectors. n_categories = TRUE, list numeric vector.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_country_specifc_categories.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve the categories of a country-specific variable in LIS/LWS for a given country. — get_country_specifc_categories","text":"","code":"# In years where no data is recorded for a given variable, it is automatically hidden from the output variable_exists(variable = \"health_c\", iso2 = \"it\") #> $it #>  1977  1978  1979  1980  1981  1982  1983  1984  1986  1987  1989  1991  1993  #>  \"No\"  \"No\"  \"No\"  \"No\"  \"No\"  \"No\"  \"No\"  \"No\"  \"No\"  \"No\"  \"No\"  \"No\"  \"No\"  #>  1995  1998  2000  2002  2004  2006  2008  2010  2012  2014  2016  2020  #> \"Yes\"  \"No\"  \"No\"  \"No\"  \"No\" \"Yes\" \"Yes\" \"Yes\"  \"No\"  \"No\"  \"No\"  \"No\"  #>  get_country_specifc_categories(variable = \"health_c\", iso2 = \"it\", from = 1995, to = 2020)  #> $`it10 - health status as described by the respondent` #>           1           2           3           4           5  #> \"very good\"      \"good\"      \"fair\"       \"bad\"  \"very bad\"  #>  #> $`it08 - health status as described by the respondent` #>           1           2           3           4           5  #> \"very good\"      \"good\"      \"fair\"       \"bad\"  \"very bad\"  #>  #> $`it06 - health status as described by the respondent` #>           1           2           3           4           5  #> \"very good\"      \"good\"      \"fair\"       \"bad\"  \"very bad\"  #>  #> $`it95 - health status as described by the respondent` #>           1           2           3           4           5  #> \"very good\"      \"good\"      \"fair\"       \"bad\"  \"very bad\"  #>   # To retrieve information on LWS datasets get_country_specifc_categories(variable = \"bus1_c\", iso2 = \"fi\", lws = TRUE) #> $`fi19 - legal form of non-traded self-employment businesses with an active role, main bu` #>                                                                       0  #> \"does not own a business or has no active role in running the business\"  #>                                                                     111  #>                        \"sole proprietorship / independent professional\"  #>                                                                     112  #>                                                           \"partnership\"  #>                                                                     113  #>                                           \"limited liability companies\"  #>  #> $`fi16 - legal form of non-traded self-employment businesses with an active role, main bu` #>                                                                       0  #> \"does not own a business or has no active role in running the business\"  #>                                                                     111  #>                        \"sole proprietorship / independent professional\"  #>                                                                     112  #>                                                           \"partnership\"  #>                                                                     113  #>                                           \"limited liability companies\"  #>  #> $`fi13 - legal form of the business, main business` #>                                                0  #>                        \"does not own a business\"  #>                                              111  #> \"sole proprietorship / independent professional\"  #>                                              112  #>                                    \"partnership\"  #>                                              113  #>                    \"limited liability companies\"  #>                                              120  #>         \"no active role in running the business\"  #>  #> $`fi09 - owns a business (or part of it) that is not publicly traded` #>                         0                         1  #> \"does not own a business\"         \"owns a business\"  #>   # Using the `n_categories` argument get_country_specifc_categories(variable = \"region_c\", iso2 = \"es\", n_categories = TRUE) #> $`LIS database. Number of distinct categories in variable: region_c.` #> es22 es21 es20 es19 es18 es17 es16 es15 es14 es13 es12 es11 es10 es09 es08 es07  #>   19   19   19   19   19   19   19   19   19   19   19   19   19   19   19   19  #> es06 es05 es04 es00 es99 es98 es97 es96 es95 es94 es93 es90 es80  #>   19   19   18    7    7    7    7    7    7    7    7   18   18  #>   # To use this function acroos multiples countries one could make use of the `purrr::map()` function  purrr::map(lissyrtools::show_countries_lws(), ~get_country_specifc_categories(variable = \"bus1_c\", iso2 = .x, lws = TRUE , n_categories = TRUE)) #> Warning: The selected variable: bus1_c, does not have values other than zeros or missings for the selectd years. #> Warning: The selected variable: bus1_c, does not have values other than zeros or missings for the selectd years. #> Warning: The selected variable: bus1_c, does not have values other than zeros or missings for the selectd years. #> Warning: The selected variable: bus1_c, does not have values other than zeros or missings for the selectd years. #> Warning: The selected variable: bus1_c, does not have values other than zeros or missings for the selectd years. #> Warning: The selected variable: bus1_c, does not have values other than zeros or missings for the selectd years. #> Warning: The selected variable: bus1_c, does not have values other than zeros or missings for the selectd years. #> Warning: The selected variable: bus1_c, does not have values other than zeros or missings for the selectd years. #> Warning: The selected variable: bus1_c, does not have values other than zeros or missings for the selectd years. #> $Australia #> $Australia$`LWS database. Number of distinct categories in variable: bus1_c.` #> named integer(0) #>  #>  #> $Austria #> $Austria$`LWS database. Number of distinct categories in variable: bus1_c.` #> at21 at17 at14 at11  #>    5    5    6    5  #>  #>  #> $Canada #> $Canada$`LWS database. Number of distinct categories in variable: bus1_c.` #> ca19 ca16 ca12 ca05 ca99  #>    2    2    2    2    2  #>  #>  #> $Chile #> $Chile$`LWS database. Number of distinct categories in variable: bus1_c.` #> named integer(0) #>  #>  #> $Denmark #> $Denmark$`LWS database. Number of distinct categories in variable: bus1_c.` #> named integer(0) #>  #>  #> $Estonia #> $Estonia$`LWS database. Number of distinct categories in variable: bus1_c.` #> ee21 ee17 ee13  #>    6    6    5  #>  #>  #> $Finland #> $Finland$`LWS database. Number of distinct categories in variable: bus1_c.` #> fi19 fi16 fi13 fi09  #>    4    4    5    2  #>  #>  #> $France #> $France$`LWS database. Number of distinct categories in variable: bus1_c.` #> named integer(0) #>  #>  #> $Germany #> $Germany$`LWS database. Number of distinct categories in variable: bus1_c.` #> named integer(0) #>  #>  #> $Greece #> $Greece$`LWS database. Number of distinct categories in variable: bus1_c.` #> gr21 gr18 gr14 gr09  #>    7    5    6    6  #>  #>  #> $Italy #> $Italy$`LWS database. Number of distinct categories in variable: bus1_c.` #> it20 it16 it14 it12 it10 it08 it06 it04 it02 it00 it98 it95  #>    2    7    6    7    6    7    7    7    2    2    2    2  #>  #>  #> $Japan #> $Japan$`LWS database. Number of distinct categories in variable: bus1_c.` #> named integer(0) #>  #>  #> $Luxembourg #> $Luxembourg$`LWS database. Number of distinct categories in variable: bus1_c.` #> lu21 lu18 lu14 lu10  #>    2    6    7    5  #>  #>  #> $Norway #> $Norway$`LWS database. Number of distinct categories in variable: bus1_c.` #> named integer(0) #>  #>  #> $Slovakia #> $Slovakia$`LWS database. Number of distinct categories in variable: bus1_c.` #> sk21 sk17 sk14 sk10  #>    4    5    6    6  #>  #>  #> $Slovenia #> $Slovenia$`LWS database. Number of distinct categories in variable: bus1_c.` #> si21 si17 si14  #>    5    5    6  #>  #>  #> $`South Africa` #> $`South Africa`$`LWS database. Number of distinct categories in variable: bus1_c.` #> named integer(0) #>  #>  #> $`South Korea` #> $`South Korea`$`LWS database. Number of distinct categories in variable: bus1_c.` #> named integer(0) #>  #>  #> $Spain #> $Spain$`LWS database. Number of distinct categories in variable: bus1_c.` #> es21 es17 es14 es11 es08  #>    6    6    6    5    5  #>  #>  #> $Sweden #> $Sweden$`LWS database. Number of distinct categories in variable: bus1_c.` #> se02  #>    2  #>  #>  #> $`United Kingdom` #> $`United Kingdom`$`LWS database. Number of distinct categories in variable: bus1_c.` #> uk19 uk17 uk15 uk13 uk11 uk09 uk07  #>    2   59   51   52   56   52   54  #>  #>  #> $`United States` #> $`United States`$`LWS database. Number of distinct categories in variable: bus1_c.` #> us22 us19 us16 us13 us10 us07 us04 us01 us98 us95  #>    8    8    8    8    9    7    8    7    7    8  #>  #>"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_database.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the database from a list of files — get_database","title":"Get the database from a list of files — get_database","text":"Retrieves 'database' attribute list files.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_database.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the database from a list of files — get_database","text":"","code":"get_database(lissy_files)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_database.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the database from a list of files — get_database","text":"lissy_files list lissy h-level, p-level merged files.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_directory.html","id":null,"dir":"Reference","previous_headings":"","what":"Get directory from parameters file — get_directory","title":"Get directory from parameters file — get_directory","text":"Get directory parameters file","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_directory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get directory from parameters file — get_directory","text":"","code":"get_directory()"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_directory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get directory from parameters file — get_directory","text":"string LIS, LWS ERFLIS directory.","code":""},{"path":[]},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_file_lisppp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retreive the 'lisppp' deflator for a given file and variable. — get_file_lisppp","text":"","code":"get_file_lisppp(   file_name,   database,   variable = NULL,   income_variable = NULL,   ppp_data = \"lissyrtools\" )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_file_lisppp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retreive the 'lisppp' deflator for a given file and variable. — get_file_lisppp","text":"file_name sting file name format 'ccyy'. database 'lis' 'lws'. variable string variable name. Defaults NULL optional 'lis' files. required 'database' = 'lws”. income_variable Defaults NULL. relevant LWS files. file LWS 'income_variable = TRUE', function retrieve deflator year income data collected. might year wealth variables collected. ppp_data optional file deflators. format tibble 'lissyrtools::deflators'. \"lissyrtools\" (default) deflators imported package internal data.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_file_lisppp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retreive the 'lisppp' deflator for a given file and variable. — get_file_lisppp","text":"numeric value 'lisppp' deflator file","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_file_lisppp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retreive the 'lisppp' deflator for a given file and variable. — get_file_lisppp","text":"Retrieves 'lisppp' deflator file. takes account reference year income variables LWS files might differ year file.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_index_hh_heads.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the index of hh-heads — get_index_hh_heads","title":"Get the index of hh-heads — get_index_hh_heads","text":"Returns logical vector indicating rows correspond household heads.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_index_hh_heads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the index of hh-heads — get_index_hh_heads","text":"","code":"get_index_hh_heads(file)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_index_hh_heads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the index of hh-heads — get_index_hh_heads","text":"file tibble data.frame LIS LWS file.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_index_hh_heads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the index of hh-heads — get_index_hh_heads","text":"logical vector TRUE hh-heads FALSE otherwise.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_lissy_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the lissy attributes — get_lissy_attributes","title":"Get the lissy attributes — get_lissy_attributes","text":"Retrieves 'level', 'merged_levels' 'database' attributes list tibbles tibble.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_lissy_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the lissy attributes — get_lissy_attributes","text":"","code":"get_lissy_attributes(lissy_object)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_lissy_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the lissy attributes — get_lissy_attributes","text":"lissy_object list tibbles tibble.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_lissy_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the lissy attributes — get_lissy_attributes","text":"list three elements.","code":""},{"path":[]},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_lws_file_income_reference_year.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve the reference year for LWS files — get_lws_file_income_reference_year","text":"","code":"get_lws_file_income_reference_year(file_name)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_lws_file_income_reference_year.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve the reference year for LWS files — get_lws_file_income_reference_year","text":"file_name String name dataset one following formats: 'ccyy' Two digit country, two digit year. E.g. \"fr84\" 'ccyyyy' Two digit country, four digit year. E.g. \"fr1984\" 'ccyyl' Two digit country, two digit year, one digit level. E.g. \"fr84h\" 'ccyyyyl' Two digit country, four digit year, one digit household/person ('h' 'p'). E.g. \"fr1984h\" 'ccyydl' Two digit country, two digit year, one digit indicating LIS, LWS ERFLIS (/w/e/r), one digit household/person. E.g. \"fr84ih\" 'ccyyyydl' Two digit country, two digit year,one digit indicating LIS, LWS ERFLIS (/w/e/r), one digit household/person. E.g. \"fr1984ih\"","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_surveys_lis.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the survey used to construct the LIS datasets for a given country. — get_surveys_lis","title":"Print the survey used to construct the LIS datasets for a given country. — get_surveys_lis","text":"Print survey used construct LIS datasets given country.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_surveys_lis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the survey used to construct the LIS datasets for a given country. — get_surveys_lis","text":"","code":"get_surveys_lis(iso2)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_surveys_lis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print the survey used to construct the LIS datasets for a given country. — get_surveys_lis","text":"iso2 character vector valid iso2 codes countries present LIS","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_surveys_lis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print the survey used to construct the LIS datasets for a given country. — get_surveys_lis","text":"list, made character vectors. elements corresponds country LIS.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_surveys_lis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print the survey used to construct the LIS datasets for a given country. — get_surveys_lis","text":"","code":"get_surveys_lis(\"it\") #> $it #>                                           1977  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           1978  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           1979  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           1980  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           1981  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           1982  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           1983  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           1984  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           1986  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           1987  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           1989  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           1991  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           1993  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           1995  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           1998  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           2000  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           2002  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           2004  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           2006  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           2008  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           2010  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           2012  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           2014  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           2016  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           2020  #> \"Survey of Household Income and Wealth (SHIW)\"  #>  get_surveys_lis(iso2 = c(\"uy\", \"pe\")) #> $uy #>                                2004                                2005  #> \"Continuous Household Survey (ECH)\" \"Continuous Household Survey (ECH)\"  #>                                2006                                2007  #> \"Continuous Household Survey (ECH)\" \"Continuous Household Survey (ECH)\"  #>                                2008                                2009  #> \"Continuous Household Survey (ECH)\" \"Continuous Household Survey (ECH)\"  #>                                2010                                2011  #> \"Continuous Household Survey (ECH)\" \"Continuous Household Survey (ECH)\"  #>                                2012                                2013  #> \"Continuous Household Survey (ECH)\" \"Continuous Household Survey (ECH)\"  #>                                2014                                2015  #> \"Continuous Household Survey (ECH)\" \"Continuous Household Survey (ECH)\"  #>                                2016                                2017  #> \"Continuous Household Survey (ECH)\" \"Continuous Household Survey (ECH)\"  #>                                2018                                2019  #> \"Continuous Household Survey (ECH)\" \"Continuous Household Survey (ECH)\"  #>                                2022  #> \"Continuous Household Survey (ECH)\"  #>  #> $pe #>                                2004                                2005  #> \"National Household Survey (ENAHO)\" \"National Household Survey (ENAHO)\"  #>                                2006                                2007  #> \"National Household Survey (ENAHO)\" \"National Household Survey (ENAHO)\"  #>                                2008                                2009  #> \"National Household Survey (ENAHO)\" \"National Household Survey (ENAHO)\"  #>                                2010                                2011  #> \"National Household Survey (ENAHO)\" \"National Household Survey (ENAHO)\"  #>                                2012                                2013  #> \"National Household Survey (ENAHO)\" \"National Household Survey (ENAHO)\"  #>                                2014                                2015  #> \"National Household Survey (ENAHO)\" \"National Household Survey (ENAHO)\"  #>                                2016                                2017  #> \"National Household Survey (ENAHO)\" \"National Household Survey (ENAHO)\"  #>                                2018                                2019  #> \"National Household Survey (ENAHO)\" \"National Household Survey (ENAHO)\"  #>                                2021  #> \"National Household Survey (ENAHO)\"  #>"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_surveys_lws.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the survey used to construct the LWS datasets for a given country. — get_surveys_lws","title":"Print the survey used to construct the LWS datasets for a given country. — get_surveys_lws","text":"Print survey used construct LWS datasets given country.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_surveys_lws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the survey used to construct the LWS datasets for a given country. — get_surveys_lws","text":"","code":"get_surveys_lws(iso2)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_surveys_lws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print the survey used to construct the LWS datasets for a given country. — get_surveys_lws","text":"iso2 character vector valid iso2 codes countries present LWS","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_surveys_lws.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print the survey used to construct the LWS datasets for a given country. — get_surveys_lws","text":"list, made character vectors. elements corresponds country LWS.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_surveys_lws.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print the survey used to construct the LWS datasets for a given country. — get_surveys_lws","text":"","code":"get_surveys_lws(\"it\") #> $it #>                                           1995  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           1998  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           2000  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           2002  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           2004  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           2006  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           2008  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           2010  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           2012  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           2014  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           2016  #> \"Survey of Household Income and Wealth (SHIW)\"  #>                                           2020  #> \"Survey of Household Income and Wealth (SHIW)\"  #>  get_surveys_lws(iso2 = c(\"fr\", \"jp\")) #> $fr #>                                   2009                                   2014  #> \"Household Wealth Survey (Patrimoine)\" \"Household Wealth Survey (Patrimoine)\"  #>                                   2017                                   2020  #>        \"Household Wealth Survey (HVP)\"        \"Household Wealth Survey (HVP)\"  #>  #> $jp #>                                       2004  #>       \"Keio Household Panel Survey (KHPS)\"  #>                                       2009  #> \"Japan Household Panel Survey (JHPS/KHPS)\"  #>                                       2010  #> \"Japan Household Panel Survey (JHPS/KHPS)\"  #>                                       2011  #> \"Japan Household Panel Survey (JHPS/KHPS)\"  #>                                       2012  #> \"Japan Household Panel Survey (JHPS/KHPS)\"  #>                                       2013  #> \"Japan Household Panel Survey (JHPS/KHPS)\"  #>                                       2014  #> \"Japan Household Panel Survey (JHPS/KHPS)\"  #>                                       2015  #> \"Japan Household Panel Survey (JHPS/KHPS)\"  #>                                       2016  #> \"Japan Household Panel Survey (JHPS/KHPS)\"  #>                                       2017  #> \"Japan Household Panel Survey (JHPS/KHPS)\"  #>                                       2018  #> \"Japan Household Panel Survey (JHPS/KHPS)\"  #>                                       2019  #> \"Japan Household Panel Survey (JHPS/KHPS)\"  #>                                       2020  #> \"Japan Household Panel Survey (JHPS/KHPS)\"  #>                                       2021  #> \"Japan Household Panel Survey (JHPS/KHPS)\"  #>"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_vars_label.html","id":null,"dir":"Reference","previous_headings":"","what":"Inspect the Labels of LIS and LWS variables — get_vars_label","title":"Inspect the Labels of LIS and LWS variables — get_vars_label","text":"Inspect Labels LIS LWS variables","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_vars_label.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inspect the Labels of LIS and LWS variables — get_vars_label","text":"","code":"get_vars_label(vars = NULL)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_vars_label.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inspect the Labels of LIS and LWS variables — get_vars_label","text":"vars character vector containing LIS/LWS variables output list lissyuse.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_vars_label.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inspect the Labels of LIS and LWS variables — get_vars_label","text":"character vector corresponding labels selected variables.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_vars_label.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inspect the Labels of LIS and LWS variables — get_vars_label","text":"","code":"# 1) Without any argument: get_vars_label() #>                                                           hid  #>                                        \"household identifier\"  #>                                                           pid  #>                                           \"person identifier\"  #>                                                           did  #>                                  \"unique country/year number\"  #>                                                         dname  #>                                     \"country/year identifier\"  #>                                                         cname  #>                                                \"country name\"  #>                                                          iso2  #>                               \"2-letter country abbreviation\"  #>                                                          iso3  #>                               \"3-letter country abbreviation\"  #>                                                          year  #>                                              \"reference year\"  #>                                                          wave  #>                                                   \"data wave\"  #>                                                       hpopwgt  #>                                            \"household weight\"  #>                                                       ppopwgt  #>                                               \"person weight\"  #>                                                          hwgt  #>                                 \"normalised household weight\"  #>                                                          pwgt  #>                                    \"normalised person weight\"  #>                                                         hwgta  #>                                 \"additional household weight\"  #>                                                         pwgta  #>                                    \"additional person weight\"  #>                                                      currency  #>                                              \"currency units\"  #>                                                      grossnet  #>                                \"gross/net income information\"  #>                                                      region_c  #>                                    \"region: country specific\"  #>                                                         rural  #>                                                  \"rural area\"  #>                                                       locsz_c  #>                          \"size of locality: country specific\"  #>                                                        area_c  #>                              \"type of area: country specific\"  #>                                                           own  #>                                \"main residence tenure status\"  #>                                                       dweltyp  #>                                            \"type of dwelling\"  #>                                                       farming  #>                                            \"farming activity\"  #>                                                        hhtype  #>                        \"household composition (discontinued)\"  #>                                                      hpartner  #>              \"household reference person living with partner\"  #>                                                        nhhmem  #>                                 \"number of household members\"  #>                                                      nhhmem65  #>                     \"number of household members 65 or older\"  #>                                                      nhhmem17  #>                   \"number of household members 17 or younger\"  #>                                                      nhhmem13  #>                   \"number of household members 13 or younger\"  #>                                                         nearn  #>              \"number of household members with labour income\"  #>                                                      relation  #>                  \"relationship to household reference person\"  #>                                                       partner  #>                                         \"living with partner\"  #>                                                       parents  #>                                         \"living with parents\"  #>                                                     nchildren  #>                  \"number of own children living in household\"  #>                                                       ageyoch  #>               \"age of youngest own child living in household\"  #>                                                           age  #>                                                \"age in years\"  #>                                                           sex  #>                                                      \"gender\"  #>                                                       marital  #>                                              \"marital status\"  #>                                                        immigr  #>                                                   \"immigrant\"  #>                                                       citizen  #>                                                 \"citizenship\"  #>                                                      ctrybrth  #>                                            \"country of birth\"  #>                                                      yrsresid  #>                              \"years since arrived in country\"  #>                                                      ethnic_c  #>                                 \"ethnicity: country specific\"  #>                                                      migrat_c  #>                        \"internal migration: country specific\"  #>                                                      immigr_c  #>             \"other immigration information: country specific\"  #>                                                      disabled  #>                                    \"indication of disability\"  #>                                                      health_c  #>                  \"subjective health status: country specific\"  #>                                                          educ  #>                               \"education (3-category recode)\"  #>                                                       educlev  #>                           \"highest completed education level\"  #>                                                        educ_c  #>                   \"highest education level: country specific\"  #>                                                        enroll  #>                                       \"enrolled in education\"  #>                                                         edyrs  #>                                          \"years of education\"  #>                                                    illiterate  #>                                                  \"illiterate\"  #>                                                       edmom_c  #>                       \"education of mother: country specific\"  #>                                                       eddad_c  #>                       \"education of father: country specific\"  #>                                                           emp  #>                                                    \"employed\"  #>                                                       emp_ilo  #>                                   \"employed (ILO definition)\"  #>                                                           lfs  #>                                         \"labour force status\"  #>                                                      informal  #>                                           \"informal activity\"  #>                                                      parleave  #>                          \"maternity/paternity/parental leave\"  #>                                                          fyft  #>                                  \"worked full-year full-time\"  #>                                                      hourstot  #>                                   \"total weekly hours worked\"  #>                                                         weeks  #>                                         \"annual weeks worked\"  #>                                                        secjob  #>                                        \"multiple jobs holder\"  #>                                                        wexptl  #>                              \"years of total work experience\"  #>                                                       status1  #>                                        \"status in employment\"  #>                                                         inda1  #>                            \"economic activity (3 categories)\"  #>                                                         indb1  #>                            \"economic activity (9 categories)\"  #>                                                         indc1  #>             \"economic activity (ISIC rev. 3.1: major groups)\"  #>                                                         indd1  #>               \"economic activity (ISIC rev. 4: major groups)\"  #>                                                        ind1_c  #>                         \"economic activity: country specific\"  #>                                                       public1  #>                                               \"public sector\"  #>                                                         occa1  #>                                   \"occupation (3 categories)\"  #>                                                         occb1  #>                          \"occupation (ISCO-88: major groups)\"  #>                                                        occ1_c  #>                                \"occupation: country specific\"  #>                                                         temp1  #>                                        \"temporary employment\"  #>                                                        ptime1  #>                                        \"part-time employment\"  #>                                                        hours1  #>                             \"weekly hours worked in main job\"  #>                                                          inum  #>                                            \"implicate number\"  #>                                                       hitotal  #>                             \"total current income, household\"  #>                                                           dhi  #>                      \"disposable household income, household\"  #>                                                        hvalgs  #>                      \"value of goods and services, household\"  #>                                                          dhci  #>                 \"disposable household cash income, household\"  #>                                                      hifactor  #>                                    \"factor income, household\"  #>                                                    hitransfer  #>                                  \"transfer income, household\"  #>                                                       hpublic  #>                                 \"public transfers, household\"  #>                                                        hpub_i  #>                              \"insurance transfers, household\"  #>                                                        ppub_i  #>                                 \"insurance transfers, person\"  #>                                                        hpub_u  #>                              \"universal transfers, household\"  #>                                                        hpub_a  #>                             \"assistance transfers, household\"  #>                                                       pitotal  #>                             \"total individual income, person\"  #>                                                         hcexp  #>                          \"consumption expenditure, household\"  #>                                                     hhouscost  #>                                    \"housing costs, household\"  #>                                                           dnw  #>                                        \"disposable net worth\"  #>                                                           anw  #>                               \"adjusted disposable net worth\"  #>                                                           inw  #>                                        \"integrated net worth\"  #>                                                           tnw  #>                                             \"total net worth\"  #>                                                      hilabour  #>                                    \"labour income, household\"  #>                                                      pilabour  #>                                       \"labour income, person\"  #>                                                          hi11  #>                                      \"wage income, household\"  #>                                                          pi11  #>                                         \"wage income, person\"  #>                                                          hi12  #>                           \"self-employment income, household\"  #>                                                          pi12  #>                              \"self-employment income, person\"  #>                                                         hi121  #>                                      \"farm income, household\"  #>                                                          hi13  #>                                  \"fringe benefits, household\"  #>                                                          pi13  #>                                     \"fringe benefits, person\"  #>                                                          hi14  #>                                  \"own consumption, household\"  #>                                                     hicapital  #>                                   \"capital income, household\"  #>                                                          hi21  #>                           \"interest and dividends, household\"  #>                                                          hi22  #>                                    \"rental income, household\"  #>                                                     hipension  #>                                         \"pensions, household\"  #>                                                     pipension  #>                                            \"pensions, person\"  #>                                                          hi31  #>                 \"public non-contributory pensions, household\"  #>                                                          pi31  #>                    \"public non-contributory pensions, person\"  #>                                                         hi311  #>                               \"universal pensions, household\"  #>                                                         pi311  #>                                  \"universal pensions, person\"  #>                                                         hi312  #>                              \"assistance pensions, household\"  #>                                                         pi312  #>                                 \"assistance pensions, person\"  #>                                                          hi32  #>                     \"public contributory pensions, household\"  #>                                                          pi32  #>                        \"public contributory pensions, person\"  #>                                                          hi33  #>                                 \"private pensions, household\"  #>                                                          pi33  #>                                    \"private pensions, person\"  #>                                                         hi331  #>                            \"occupational pensions, household\"  #>                                                         pi331  #>                               \"occupational pensions, person\"  #>                                                         hi332  #>                              \"individual pensions, household\"  #>                                                         pi332  #>                                 \"individual pensions, person\"  #>                                                      hipubsoc  #>          \"public social benefits (excl. pensions), household\"  #>                                                          hi41  #>                                  \"family benefits, household\"  #>                                                         hi411  #>             \"maternity/paternity and parental leave payments\"  #>                                                         pi411  #>             \"maternity/paternity and parental leave payments\"  #>                                                         hi412  #>                                  \"child allowance, household\"  #>                                                          hi42  #>                            \"unemployment benefits, household\"  #>                                                          pi42  #>                               \"unemployment benefits, person\"  #>                                                         hi421  #>                           \"unemployment insurance, household\"  #>                                                         pi421  #>                              \"unemployment insurance, person\"  #>                                                         hi422  #>                          \"unemployment assistance, household\"  #>                                                         pi422  #>                             \"unemployment assistance, person\"  #>                                                          hi43  #>                     \"sickness/temporary work injury payments\"  #>                                                          pi43  #>                     \"sickness/temporary work injury payments\"  #>                                                          hi44  #>                   \"disability/permanent work injury benefits\"  #>                                                          pi44  #>                   \"disability/permanent work injury benefits\"  #>                                                          hi45  #>                              \"general asssistance, household\"  #>                                                          hi46  #>                                 \"housing benefits, household\"  #>                                                          hi47  #>                          \"public in-kind benefits, household\"  #>                                                         hi471  #>                                    \"food benefits, household\"  #>                                                     hiprivate  #>                                \"private transfers, household\"  #>                                                          hi51  #>         \"cash transfers from private institutions, household\"  #>                                                         hi511  #>                                     \"scholarships, household\"  #>                                                         pi511  #>                                        \"scholarships, person\"  #>                                                          hi52  #>                   \"inter-household cash transfers, household\"  #>                                                         hi521  #>                        \"alimony and child support, household\"  #>                                                         hi522  #>                                      \"remittances, household\"  #>                                                          hi53  #>                        \"private in-kind transfers, household\"  #>                                                         hi531  #>      \"in-kind transfers from private institutions, household\"  #>                                                         hi532  #>          \"in-kind transfers from other households, household\"  #>                                                        hxitsc  #>                   \"income taxes and contributions, household\"  #>                                                        pxitsc  #>                      \"income taxes and contributions, person\"  #>                                                        hxitax  #>                                     \"income taxes, household\"  #>                                                        pxitax  #>                                        \"income taxes, person\"  #>                                                       hxscont  #>                    \"social security contributions, household\"  #>                                                       pxscont  #>                       \"social security contributions, person\"  #>                                                        hxotax  #>                               \"other direct taxes, household\"  #>                                                        hxptax  #>                                   \"property taxes, household\"  #>                                                       hxvcont  #>                          \"voluntary contributions, household\"  #>                                                       pxvcont  #>                             \"voluntary contributions, person\"  #>                                                         hxiht  #>                   \"inter-household transfers paid, household\"  #>                                                        hxalim  #>                   \"alimony and child support paid, household\"  #>                                                       hxremit  #>                                 \"remittances paid, household\"  #>                                                        hxmort  #>                                       \"mortgage installments\"  #>                                                        hxintm  #>                                     \"mortgage interests paid\"  #>                                                      helabour  #>                      \"extraordinary labour income, household\"  #>                                                      pelabour  #>                         \"extraordinary labour income, person\"  #>                                                       hecgain  #>                                    \"capital gains, household\"  #>                                                     heinherit  #>                             \"inheritance received, household\"  #>                                                         heoth  #>                       \"other extraordinary income, household\"  #>                                                        hrenti  #>                                     \"imputed rent, household\"  #>                                                           hc1  #>                 \"food and non-alcoholic beverages, household\"  #>                                                           hc2  #>                              \"alcohol and tobacco, household\"  #>                                                           hc3  #>                            \"clothing and footwear, household\"  #>                                                           hc4  #>                        \"actual rent and utilities, household\"  #>                                                          hc41  #>                                      \"actual rent, household\"  #>                                                           hc5  #>                                \"housing equipment, household\"  #>                                                           hc6  #>                                           \"health, household\"  #>                                                           hc7  #>                                        \"transport, household\"  #>                                                           hc8  #>                                    \"communication, household\"  #>                                                           hc9  #>                           \"recreation and culture, household\"  #>                                                          hc10  #>                                        \"education, household\"  #>                                                          hc11  #>                           \"restaurants and hotels, household\"  #>                                                          hc12  #>                 \"miscellaneous goods and services, household\"  #>                                                        hxloan  #>                                \"installments for other loans\"  #>                                                        hxintl  #>                               \"interests paid on other loans\"  #>                                                           cir  #>                         \"expects to receive inheritance/gift\"  #>                                                           cia  #>                         \"amount of expected inheritance/gift\"  #>                                                           cig  #>                            \"expects to give inheritance/gift\"  #>                                                           chc  #>                          \"home equity line of credit (dummy)\"  #>                                                           cha  #>                        \"amount of home equity line of credit\"  #>                                                           cnc  #>                     \"non-home equity lines of credit (dummy)\"  #>                                                           cna  #>                   \"amount of non-home equity lines of credit\"  #>                                                           ppr  #>                       \"purchase price of principal residence\"  #>                                                           ppy  #>                     \"year of purchase of principal residence\"  #>                                                           pir  #>                           \"inheritance/gift received (dummy)\"  #>                                                          pia1  #>                       \"amount of inheritance/gift received 1\"  #>                                                          pia2  #>                       \"amount of inheritance/gift received 2\"  #>                                                          pia3  #>                       \"amount of inheritance/gift received 3\"  #>                                                          pia4  #>                       \"amount of inheritance/gift received 4\"  #>                                                          piy1  #>                            \"year inheritance/gift received 1\"  #>                                                          piy2  #>                            \"year inheritance/gift received 2\"  #>                                                          piy3  #>                            \"year inheritance/gift received 3\"  #>                                                          piy4  #>                            \"year inheritance/gift received 4\"  #>                                                          pit1  #>                         \"type of inheritance/gift received 1\"  #>                                                          pit2  #>                         \"type of inheritance/gift received 2\"  #>                                                          pit3  #>                         \"type of inheritance/gift received 3\"  #>                                                          pit4  #>                         \"type of inheritance/gift received 4\"  #>                                                          piw1  #>                       \"from whom inheritance/gift received 1\"  #>                                                          piw2  #>                       \"from whom inheritance/gift received 2\"  #>                                                          piw3  #>                       \"from whom inheritance/gift received 3\"  #>                                                          piw4  #>                       \"from whom inheritance/gift received 4\"  #>                                                          pim1  #>            \"household member who received inheritance/gift 1\"  #>                                                          pim2  #>            \"household member who received inheritance/gift 2\"  #>                                                          pim3  #>            \"household member who received inheritance/gift 3\"  #>                                                          pim4  #>            \"household member who received inheritance/gift 4\"  #>                                                          ssyc  #>            \"years of contributions to social security system\"  #>                                                        bus1_c  #>                       \"business indicator/type of business 1\"  #>                                                        bus2_c  #>                       \"business indicator/type of business 2\"  #>                                                        bus3_c  #>                       \"business indicator/type of business 3\"  #>                                                          basb  #>                                           \"savings behaviour\"  #>                                                         basp1  #>                              \"savings purpose: home purchase\"  #>                                                         basp2  #>                      \"savings purpose: other major purchases\"  #>                                                         basp3  #> \"savings purpose: financial investments (including business)\"  #>                                                         basp4  #>                         \"savings purpose: old-age provisions\"  #>                                                         basp5  #>                               \"savings purpose: paying debts\"  #>                                                         basp6  #>                          \"savings purpose: unexpected events\"  #>                                                         basp7  #>                      \"savings purpose: recreation and travel\"  #>                                                         basp8  #>                                  \"savings purpose: education\"  #>                                                         basp9  #>                                      \"savings purpose: other\"  #>                                                       bafr1_c  #>                                     \"financial risk taking 1\"  #>                                                       bafr2_c  #>                                     \"financial risk taking 2\"  #>                                                       bafr3_c  #>                                     \"financial risk taking 3\"  #>                                                       bafp1_c  #>                                        \"financial planning 1\"  #>                                                       bafp2_c  #>                                        \"financial planning 2\"  #>                                                       bafl1_c  #>                                        \"financial literacy 1\"  #>                                                       bafl2_c  #>                                        \"financial literacy 2\"  #>                                                       bafl3_c  #>                                        \"financial literacy 3\"  #>                                                       bafl4_c  #>                                        \"financial literacy 4\"  #>                                                       bafi1_c  #>                                     \"financial information 1\"  #>                                                       bafi2_c  #>                                     \"financial information 2\"  #>                                                       bafi3_c  #>                                     \"financial information 3\"  #>                                                       bafi4_c  #>                                     \"financial information 4\"  #>                                                       bafi5_c  #>                                     \"financial information 5\"  #>                                                          bopc  #>                          \"possession of credit cards (dummy)\"  #>                                                        bonc_c  #>                                      \"number of credit cards\"  #>                                                          boue  #>                  \"amount needed to cover unexpected expenses\"  #>                                                          boea  #>              \"ability to get emergency financial aid (dummy)\"  #>                                                          bolc  #>                                  \"loan consolidation (dummy)\"  #>                                                       bocc1_c  #>                              \"objective credit constraints 1\"  #>                                                       bocc2_c  #>                              \"objective credit constraints 2\"  #>                                                        bocs_c  #>                               \"subjective credit constraints\"  #>                                                       bocd1_c  #>                             \"constraints in debt repayment 1\"  #>                                                       bocd2_c  #>                             \"constraints in debt repayment 2\"  #>                                                        boef_c  #>                       \"expectations about household finances\"  #>                                                       boee1_c  #>                            \"expectations about the economy 1\"  #>                                                       boee2_c  #>                            \"expectations about the economy 2\"  #>                                                            ha  #>                                                \"total assets\"  #>                                                           han  #>                                        \"non-financial assets\"  #>                                                          hanr  #>                                                 \"real estate\"  #>                                                         hanrp  #>                                         \"principal residence\"  #>                                                         hanro  #>                                           \"other real estate\"  #>                                                          hann  #>                                          \"non-housing assets\"  #>                                                         hannb  #>                                             \"business equity\"  #>                                                         hannc  #>                                              \"consumer goods\"  #>                                                        hanncv  #>                                                    \"vehicles\"  #>                                                        hanncd  #>                                \"other durables and valuables\"  #>                                                         hanno  #>                                  \"other non-financial assets\"  #>                                                           haf  #>                       \"financial assets (excluding pensions)\"  #>                                                          hafc  #>                                   \"deposit accounts and cash\"  #>                                                          hafi  #>                                       \"financial investments\"  #>                                                         hafib  #>                             \"bonds and other debt securities\"  #>                                                         hafis  #>                                     \"stocks and other equity\"  #>                                                         hafii  #>                \"investment funds and alternative investments\"  #>                                                          hafo  #>                          \"other non-pension financial assets\"  #>                                                           has  #>                  \"pension assets and other long-term savings\"  #>                                                           pas  #>          \"pension assets and other long-term savings, person\"  #>                                                          hasi  #>            \"life insurance and voluntary individual pensions\"  #>                                                          pasi  #>    \"life insurance and voluntary individual pensions, person\"  #>                                                         hasil  #>                                     \"life insurance accounts\"  #>                                                         pasil  #>                             \"life insurance accounts, person\"  #>                                                         hasip  #>                       \"individual voluntary pension accounts\"  #>                                                         pasip  #>               \"individual voluntary pension accounts, person\"  #>                                                          haso  #>                                       \"occupational pensions\"  #>                                                          paso  #>                               \"occupational pensions, person\"  #>                                                        hasodb  #>                          \"occupational pensions (DB schemes)\"  #>                                                        pasodb  #>                  \"occupational pensions (DB schemes), person\"  #>                                                        hasodc  #>                          \"occupational pensions (DC schemes)\"  #>                                                        pasodc  #>                  \"occupational pensions (DC schemes), person\"  #>                                                          hass  #>                        \"social security pension entitlements\"  #>                                                          pass  #>                \"social security pension entitlements, person\"  #>                                                        hassdb  #>                                \"social security (DB schemes)\"  #>                                                        passdb  #>                        \"social security (DB schemes), person\"  #>                                                        hassdc  #>                                \"social security (DC schemes)\"  #>                                                        passdc  #>                        \"social security (DC schemes), person\"  #>                                                            hl  #>                                           \"total liabilities\"  #>                                                           hlr  #>                                     \"real estate liabilities\"  #>                                                          hlrp  #>                                   \"principal residence loans\"  #>                                                          hlro  #>                                     \"other real estate loans\"  #>                                                           hln  #>                                     \"non-housing liabilities\"  #>                                                          hlni  #>                                            \"investment loans\"  #>                                                          hlnc  #>                                        \"consumer goods loans\"  #>                                                         hlncv  #>                                               \"vehicle loans\"  #>                                                         hlncd  #>                       \"other loans for goods and consumption\"  #>                                                          hlne  #>                                             \"education loans\"  #>                                                          hlno  #>                               \"other non-housing liabilities\"  #>                                                          hlsr  #>                  \"institutional loans secured by real estate\"  #>                                                         hlsrp  #>                              \"secured by principal residence\"  #>                                                         hlsro  #>                                \"secured by other real estate\"  #>                                                          hlsn  #>                            \"loans not secured by real estate\"  #>                                                         hlsng  #>                              \"guaranteed institutional loans\"  #>                                                         hlsnn  #>                          \"non-guaranteed institutional loans\"  #>                                                         hlsni  #>                          \"informal (non-institutional) loans\"  #>                                                        nrooms  #>                  \"number of rooms available to the household\"  #>                                                        typehh  #>                                              \"household type\"  #>                                                       nhhmem6  #>                    \"number of household members 6 or younger\"  #>                                                     oneparent  #>                                                 \"lone parent\"  #>                                                      depchild  #>                                             \"dependent child\"  #>                                                        momnum  #>                                       \"pointer to the mother\"  #>                                                       partnum  #>                                      \"pointer to the partner\"  #>                                                        dadnum  #>                                       \"pointer to the father\"  #>                                                         occc1  #>                          \"occupation (ISCO-08: major groups)\"  #>                                                         wage1  #>                                               \"monthly  wage\"  #>                                                        hwage1  #>                                                 \"hourly wage\"  #>                                                       weeksft  #>                               \"annual weeks worked full-time\"  #>                                                         hafct  #>                               \"transaction accounts and cash\"  #>                                                         hafcs  #>                                             \"saving accounts\"  #>                                                        hafiss  #>                                      \"publicly traded stocks\"  #>                                                        hafiso  #>                            \"unlisted shares and other equity\"  #>                                                         hafom  #>                                     \"money owed to household\"   if (FALSE) { # \\dontrun{ # 2) Using with the outputed list from lissyuse: lis_datasets <- lissyuse(data = c(\"uk\"), vars = c(\"hpub_i\",\"hpub_u\", \"hi42\", \"hi421\", \"hi422\", \"hi43\"), from = 2016) get_vars_label(vars = lis_datasets) } # }  # 3) Using a character vector with LIS/LWS variables: get_vars_label(vars = c(\"fyft\", \"basb\", \"hxremit\", \"bafi1_c\", \"pasodc\")) #>                                         fyft  #>                 \"worked full-year full-time\"  #>                                         basb  #>                          \"savings behaviour\"  #>                                      hxremit  #>                \"remittances paid, household\"  #>                                      bafi1_c  #>                    \"financial information 1\"  #>                                       pasodc  #> \"occupational pensions (DC schemes), person\""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_years_lis.html","id":null,"dir":"Reference","previous_headings":"","what":"Print all the existing years in LIS for a given country. — get_years_lis","title":"Print all the existing years in LIS for a given country. — get_years_lis","text":"Print existing years LIS given country.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_years_lis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print all the existing years in LIS for a given country. — get_years_lis","text":"","code":"get_years_lis(iso2)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_years_lis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print all the existing years in LIS for a given country. — get_years_lis","text":"iso2 character vector valid iso2 codes countries present LIS.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_years_lis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print all the existing years in LIS for a given country. — get_years_lis","text":"list, made numeric vectors. elements corresponds country LIS.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_years_lis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print all the existing years in LIS for a given country. — get_years_lis","text":"","code":"get_years_lis(\"it\") #> $it #>  [1] 1977 1978 1979 1980 1981 1982 1983 1984 1986 1987 1989 1991 1993 1995 1998 #> [16] 2000 2002 2004 2006 2008 2010 2012 2014 2016 2020 #>  get_years_lis(iso2 = c(\"de\", \"jp\")) #> $de #>  [1] 1973 1978 1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 1993 1994 1995 #> [16] 1996 1997 1998 1999 2000 2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 #> [31] 2011 2012 2013 2014 2015 2016 2017 2018 2019 2020 #>  #> $jp #>  [1] 2008 2009 2010 2011 2012 2013 2014 2015 2016 2017 2018 2019 2020 #>"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_years_lws.html","id":null,"dir":"Reference","previous_headings":"","what":"Print all the existing years in LWS for a given country. — get_years_lws","title":"Print all the existing years in LWS for a given country. — get_years_lws","text":"Print existing years LWS given country.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_years_lws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print all the existing years in LWS for a given country. — get_years_lws","text":"","code":"get_years_lws(iso2)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_years_lws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print all the existing years in LWS for a given country. — get_years_lws","text":"iso2 character vector valid iso2 codes countries present LWS.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_years_lws.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print all the existing years in LWS for a given country. — get_years_lws","text":"list, made numeric vectors. elements corresponds country LWS.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/get_years_lws.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print all the existing years in LWS for a given country. — get_years_lws","text":"","code":"get_years_lws(\"it\") #> $it #>  [1] 1995 1998 2000 2002 2004 2006 2008 2010 2012 2014 2016 2020 #>  get_years_lws(iso2 = c(\"de\", \"jp\")) #> $de #> [1] 2002 2007 2012 2017 #>  #> $jp #>  [1] 2004 2009 2010 2011 2012 2013 2014 2015 2016 2017 2018 2019 2020 2021 #>"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/has_lissy_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"A list with lissy attributes — has_lissy_attributes","title":"A list with lissy attributes — has_lissy_attributes","text":"list lissy attributes","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/has_lissy_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A list with lissy attributes — has_lissy_attributes","text":"","code":"has_lissy_attributes(lissy_object)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/has_lissy_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A list with lissy attributes — has_lissy_attributes","text":"lissy_object list tibbles tibble.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/has_lissy_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A list with lissy attributes — has_lissy_attributes","text":"boolean.","code":""},{"path":[]},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_adjust_by_lisppp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Applies the deflator adjustment to an aggregate — implement_adjust_by_lisppp","text":"","code":"implement_adjust_by_lisppp(   file,   file_name,   database,   variable,   income_variable = NULL,   ppp_data = \"lissyrtools\" )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_adjust_by_lisppp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Applies the deflator adjustment to an aggregate — implement_adjust_by_lisppp","text":"file list LIS LWS file file_name name LIS LWS file. variable string name variable adjustment applied. income_variable Defaults NULL. relevant LWS files. file LWS 'income_variable = TRUE', function retrieve deflator year income data collected. might year wealth variables collected. ppp_data optional file deflators. format tibble 'lissyrtools::deflators'. \"lissyrtools\" (default) deflators imported package internal data.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_adjust_by_lisppp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Applies the deflator adjustment to an aggregate — implement_adjust_by_lisppp","text":"used inside transform_adjust_by_lisppp().","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_equivalise.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply equivalise by number of household members — implement_equivalise","title":"Apply equivalise by number of household members — implement_equivalise","text":"Applies equivalisation number household members file single variable.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_equivalise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply equivalise by number of household members — implement_equivalise","text":"","code":"implement_equivalise(file, file_name, variable, eq_scale = 0.5)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_equivalise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply equivalise by number of household members — implement_equivalise","text":"file LIS LWS file. file_name name LIS LWS file. variable string variable equivalisation applied. eq_scale real number. Defaults 0.5. variable equivalized using n_household_members^eq_scale","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_equivalise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply equivalise by number of household members — implement_equivalise","text":"file equivalised variable.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_equivalise.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply equivalise by number of household members — implement_equivalise","text":"used inside transform_equivalise().","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_equivalise_oecd.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply equivalise with the OECD scale — implement_equivalise_oecd","title":"Apply equivalise with the OECD scale — implement_equivalise_oecd","text":"Applies equivalisation number  adults children household.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_equivalise_oecd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply equivalise with the OECD scale — implement_equivalise_oecd","text":"","code":"implement_equivalise_oecd(   file,   file_name,   variable,   value_other_adults = 0.7,   value_children = 0.5 )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_equivalise_oecd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply equivalise with the OECD scale — implement_equivalise_oecd","text":"file LIS LWS file. file_name name LIS LWS file. variable string variable equivalisation applied. value_other_adults real number. Defaults 0.7. value assigned second last adults household. value_children real number. Defaults 0.7. value assigned children household.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_equivalise_oecd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply equivalise with the OECD scale — implement_equivalise_oecd","text":"file equivalised variable.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_equivalise_oecd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply equivalise with the OECD scale — implement_equivalise_oecd","text":"used inside transform_equivalise_oecd().","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_false_zeros_to_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply the recoding of zeros into missing values if all values are zero — implement_false_zeros_to_na","title":"Apply the recoding of zeros into missing values if all values are zero — implement_false_zeros_to_na","text":"Lower-level function used within 'transform_false_zeros_to_na()' .","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_false_zeros_to_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply the recoding of zeros into missing values if all values are zero — implement_false_zeros_to_na","text":"","code":"implement_false_zeros_to_na(file, file_name, variable)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_false_zeros_to_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply the recoding of zeros into missing values if all values are zero — implement_false_zeros_to_na","text":"file tibble data.frame LIS LWS file. file_name string name LIS LWS file. variable string variable top coding applied.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_false_zeros_to_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply the recoding of zeros into missing values if all values are zero — implement_false_zeros_to_na","text":"tibble containing file recoded variable.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_filter_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply 'transform_filter_age()' to a single file — implement_filter_age","title":"Apply 'transform_filter_age()' to a single file — implement_filter_age","text":"Applies 'transform_filter_age()' single LIS/LWS file.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_filter_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply 'transform_filter_age()' to a single file — implement_filter_age","text":"","code":"implement_filter_age(file, file_name, from, to)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_filter_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply 'transform_filter_age()' to a single file — implement_filter_age","text":"file LIS LWS file. file_name name LIS LWS file. integer lower boundary value (included sample). integer higher boundary value (included sample).","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_filter_age.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply 'transform_filter_age()' to a single file — implement_filter_age","text":"file filtered age variable.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_filter_age.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply 'transform_filter_age()' to a single file — implement_filter_age","text":"used inside 'transform_filter_age()' 'transform_restrict_age()'.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_negative_values_to_zero.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply recoding negative values to zero — implement_negative_values_to_zero","title":"Apply recoding negative values to zero — implement_negative_values_to_zero","text":"Applies recoding negative values zeroes variable single file.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_negative_values_to_zero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply recoding negative values to zero — implement_negative_values_to_zero","text":"","code":"implement_negative_values_to_zero(file, file_name, variable)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_negative_values_to_zero.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply recoding negative values to zero — implement_negative_values_to_zero","text":"file LIS LWS file. file_name name LIS LWS file variable string variable recoding applied.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_negative_values_to_zero.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply recoding negative values to zero — implement_negative_values_to_zero","text":"file recoded variable.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_negative_values_to_zero.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply recoding negative values to zero — implement_negative_values_to_zero","text":"used inside transform_negative_values_to_zero().","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_restrict_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply 'transform_restrict_age()' to a single file — implement_restrict_age","title":"Apply 'transform_restrict_age()' to a single file — implement_restrict_age","text":"Applies 'transform_restrict_age()' single LIS/LWS file.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_restrict_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply 'transform_restrict_age()' to a single file — implement_restrict_age","text":"","code":"implement_restrict_age(file, file_name, variable, from, to)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_restrict_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply 'transform_restrict_age()' to a single file — implement_restrict_age","text":"file LIS LWS file. file_name name LIS LWS file. variable character vector length one variable recoded NA age outside boundaries (included). integer lower boundary value (included sample). integer higher boundary value (included sample).","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_restrict_age.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply 'transform_restrict_age()' to a single file — implement_restrict_age","text":"file filtered age variable.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_restrict_to_household_heads.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply 'transform_restrict_to_household_heads()' to a single file — implement_restrict_to_household_heads","title":"Apply 'transform_restrict_to_household_heads()' to a single file — implement_restrict_to_household_heads","text":"Applies 'transform_restrict_to_household_heads()' single LIS/LWS file.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_restrict_to_household_heads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply 'transform_restrict_to_household_heads()' to a single file — implement_restrict_to_household_heads","text":"","code":"implement_restrict_to_household_heads(file, file_name, variable)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_restrict_to_household_heads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply 'transform_restrict_to_household_heads()' to a single file — implement_restrict_to_household_heads","text":"file LIS LWS file. file_name name LIS LWS file. variable character vector length one variable recoded NA relation missing equal 1000 (household head).","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_restrict_to_household_heads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply 'transform_restrict_to_household_heads()' to a single file — implement_restrict_to_household_heads","text":"file filtered age variable.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_top_code_with_iqr.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply top or bottom coding with log IQR to a single file — implement_top_code_with_iqr","title":"Apply top or bottom coding with log IQR to a single file — implement_top_code_with_iqr","text":"Applies upper lower limit variable values using Interquartile Range (IQR) variable transformed natural logarithm scale factor ('times'). 'household level' variables, IQR log transformed variable computed using household heads. 'person level' variables, individuals file used.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_top_code_with_iqr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply top or bottom coding with log IQR to a single file — implement_top_code_with_iqr","text":"","code":"implement_top_code_with_iqr(   file,   file_name,   variable,   times,   file_level,   variable_level = NULL,   weight = NULL )  implement_bottom_code_with_iqr(   file,   file_name,   variable,   times,   file_level,   variable_level = NULL,   weight = NULL )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_top_code_with_iqr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply top or bottom coding with log IQR to a single file — implement_top_code_with_iqr","text":"file LIS LWS file. file_name string name LIS LWS file. variable string variable top coding applied. times numeric indicating scale factor IQR. Defaults 3. file_level string indicating level file. Valid inputs : 'household', 'h', 'person' 'p'. variable_level string level variable. either 'household' 'person'. NULL (default), function try guess level variable. done comparing value 'variable' pre-set lists variables. weight string name variable 'file' used sample weights.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_top_code_with_iqr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply top or bottom coding with log IQR to a single file — implement_top_code_with_iqr","text":"tibble containing file recoded variable.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_top_code_with_iqr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply top or bottom coding with log IQR to a single file — implement_top_code_with_iqr","text":"used inside transform_top_code_with_iqr() transform_bottom_code_with_iqr() .","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_top_code_with_iqr_pfile.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply top and bottom coding with log IQR to a level-defined file — implement_top_code_with_iqr_pfile","title":"Apply top and bottom coding with log IQR to a level-defined file — implement_top_code_with_iqr_pfile","text":"Lower-level functions used within 'implement_top_code_with_iqr()' 'implement_bottom_code_with_iqr()'.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_top_code_with_iqr_pfile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply top and bottom coding with log IQR to a level-defined file — implement_top_code_with_iqr_pfile","text":"","code":"implement_top_code_with_iqr_pfile(   file,   file_name,   variable,   times = 3,   variable_level = NULL,   weight = NULL )  implement_top_code_with_iqr_hfile(   file,   file_name,   variable,   times = 3,   weight = NULL )  implement_bottom_code_with_iqr_pfile(   file,   file_name,   variable,   times = 3,   variable_level = NULL,   weight = NULL )  implement_bottom_code_with_iqr_hfile(   file,   file_name,   variable,   times = 3,   weight = NULL )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_top_code_with_iqr_pfile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply top and bottom coding with log IQR to a level-defined file — implement_top_code_with_iqr_pfile","text":"file tibble data.frame LIS LWS file. file_name string name LIS LWS file. variable string variable top coding applied. times numeric indicating scale factor IQR. Defaults 3. variable_level string level variable. either 'household' 'person'. NULL (default), function try guess level variable. done comparing value 'variable' pre-set lists variables. weight string name variable 'file' used sample weights.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_top_code_with_iqr_pfile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply top and bottom coding with log IQR to a level-defined file — implement_top_code_with_iqr_pfile","text":"tibble containing file recoded variable.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_zeros_to_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply recoding of zeros into missing values — implement_zeros_to_na","title":"Apply recoding of zeros into missing values — implement_zeros_to_na","text":"Applies recoding zeroes missing values file single variable.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_zeros_to_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply recoding of zeros into missing values — implement_zeros_to_na","text":"","code":"implement_zeros_to_na(file, file_name, variable)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_zeros_to_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply recoding of zeros into missing values — implement_zeros_to_na","text":"file LIS LWS file. file_name name LIS LWS file variable string variable recoding applied.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_zeros_to_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply recoding of zeros into missing values — implement_zeros_to_na","text":"file recoded variable.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/implement_zeros_to_na.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply recoding of zeros into missing values — implement_zeros_to_na","text":"used inside transform_zeros_to_na().","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/import_lisppp_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Import lisppp dataset — import_lisppp_data","title":"Import lisppp dataset — import_lisppp_data","text":"Retrieves lisppp deflators dataset.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/import_lisppp_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import lisppp dataset — import_lisppp_data","text":"","code":"import_lisppp_data(path_to_ppp_file = \"lissy\")"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/import_lisppp_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import lisppp dataset — import_lisppp_data","text":"path_to_ppp_file character string indicating deflator values can found. value 'lissyrtools', import data 'lissyrtools'. Specifying 'lissy' (default) read within LISSY directory. value requires full path specification deflators file.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/import_lisppp_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import lisppp dataset — import_lisppp_data","text":"tibble lisppp deflators.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/intervals_with_single_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Interval has single value — intervals_with_single_value","title":"Interval has single value — intervals_with_single_value","text":"Check interval beginning end equal thus composed single value.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/intervals_with_single_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interval has single value — intervals_with_single_value","text":"","code":"intervals_with_single_value(x)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/intervals_with_single_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interval has single value — intervals_with_single_value","text":"string interval.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/intervals_with_single_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interval has single value — intervals_with_single_value","text":"boolean indicating first second element interval value.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/intervals_with_single_value.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Interval has single value — intervals_with_single_value","text":"used inside 'compute_lorenz_curve()'","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/iqr_top_bottom_coding.html","id":null,"dir":"Reference","previous_headings":"","what":"IQR-Based Top/Bottom Coding for a Single Variable — iqr_top_bottom_coding","title":"IQR-Based Top/Bottom Coding for a Single Variable — iqr_top_bottom_coding","text":"Internal utility applies top /bottom coding numeric vector using IQR rule log() transformation.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/iqr_top_bottom_coding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IQR-Based Top/Bottom Coding for a Single Variable — iqr_top_bottom_coding","text":"","code":"iqr_top_bottom_coding(   x,   w = NULL,   times = 3,   type = c(\"type_4\", \"type_2\"),   one_sided = NULL )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/iqr_top_bottom_coding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"IQR-Based Top/Bottom Coding for a Single Variable — iqr_top_bottom_coding","text":"x Numeric vector. Variable top/bottom coded. w Optional numeric vector weights. times Numeric. Multiplier IQR determine bounds (default 3). type Character. Quantile estimation type, passed compute_weighted_percentiles function (e.g., \"type_4\", \"type_2\"). one_sided Character. \"top\", \"bottom\", NULL (default) two-sided coding.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/iqr_top_bottom_coding.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"IQR-Based Top/Bottom Coding for a Single Variable — iqr_top_bottom_coding","text":"numeric vector values threshold replaced (original scale).","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/iqr_top_bottom_coding.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"IQR-Based Top/Bottom Coding for a Single Variable — iqr_top_bottom_coding","text":"","code":"if (FALSE) { # \\dontrun{ data <- lissyrtools::lissyuse(data = \"it16\", vars = c(\"dhi\")) iqr_top_bottom_coding(data$it16h$dhi) iqr_top_bottom_coding(data$it16h$dhi, data$it16h$hwgt, one_sided = \"top\") } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/is.all.na.or.zero.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if all objects are NAs or 0 — is.all.na.or.zero","title":"Test if all objects are NAs or 0 — is.all.na.or.zero","text":"Test objects NAs 0","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/is.all.na.or.zero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if all objects are NAs or 0 — is.all.na.or.zero","text":"","code":"is.all.na.or.zero(x)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/is.all.same.value.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if all elements of a vector have the same value — is.all.same.value","title":"Test if all elements of a vector have the same value — is.all.same.value","text":"Test elements vector value","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/is.all.same.value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if all elements of a vector have the same value — is.all.same.value","text":"","code":"is.all.same.value(x, na.rm = FALSE)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/is.household.dataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks if the dataset is at household level — is.household.dataset","title":"Checks if the dataset is at household level — is.household.dataset","text":"function checks 'h' name LIS LWS dataset.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/is.household.dataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks if the dataset is at household level — is.household.dataset","text":"","code":"is.household.dataset(dataset_name)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/is.household.dataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks if the dataset is at household level — is.household.dataset","text":"dataset_name name LIS LWS dataset.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/is.household.dataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks if the dataset is at household level — is.household.dataset","text":"boolean.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/is_change_possible.html","id":null,"dir":"Reference","previous_headings":"","what":"Is possible to produce the desired format change — is_change_possible","title":"Is possible to produce the desired format change — is_change_possible","text":"used inside 'change_file_name_format()'","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/is_change_possible.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is possible to produce the desired format change — is_change_possible","text":"","code":"is_change_possible(current_format, to_format)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/is_change_possible.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is possible to produce the desired format change — is_change_possible","text":"current_format string currant format. to_format string desired format.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/is_change_possible.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is possible to produce the desired format change — is_change_possible","text":"boolean.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/is_lissy_machine.html","id":null,"dir":"Reference","previous_headings":"","what":"Is a LISSY machine — is_lissy_machine","title":"Is a LISSY machine — is_lissy_machine","text":"Returns boolean indicating code running LISSY machine","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/is_lissy_machine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is a LISSY machine — is_lissy_machine","text":"","code":"is_lissy_machine()"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/is_lissy_machine.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is a LISSY machine — is_lissy_machine","text":"boolean.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/italy_14_lis_h.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Household-Level LIS Dataset (1,000 Rows) — italy_14_lis_h","title":"Sample Household-Level LIS Dataset (1,000 Rows) — italy_14_lis_h","text":"dataset provides household-level data LIS database 1,000 rows, designed exploration user interaction. automatically loaded lissyuse_locally() whenever Italy selected along least one household-level variable (e.g., \"region_c\").","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/italy_14_lis_h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Household-Level LIS Dataset (1,000 Rows) — italy_14_lis_h","text":"","code":"italy_14_lis_h"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/italy_14_lis_h.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample Household-Level LIS Dataset (1,000 Rows) — italy_14_lis_h","text":"Data frame 1,000 rows 112 columns.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/italy_14_lis_h.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample Household-Level LIS Dataset (1,000 Rows) — italy_14_lis_h","text":"primary purpose dataset, lissyuse_locally() function, allow users build test code locally, simulating execution running LISSY (LIS user interface) using lissyuse() function.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/italy_14_lis_h.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Household-Level LIS Dataset (1,000 Rows) — italy_14_lis_h","text":"","code":"if (FALSE) { # \\dontrun{ italy_14_lis_h } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/italy_14_lis_p.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Individual-Level LIS Dataset (1,000 Rows) — italy_14_lis_p","title":"Sample Individual-Level LIS Dataset (1,000 Rows) — italy_14_lis_p","text":"dataset provides individual-level data LIS database 1,000 rows, designed exploration user interaction. automatically loaded lissyuse_locally() whenever Italy selected along least one individual-level variable (e.g., \"age\").","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/italy_14_lis_p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Individual-Level LIS Dataset (1,000 Rows) — italy_14_lis_p","text":"","code":"italy_14_lis_p"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/italy_14_lis_p.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample Individual-Level LIS Dataset (1,000 Rows) — italy_14_lis_p","text":"Data frame 1,000 rows 97 columns.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/italy_14_lis_p.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample Individual-Level LIS Dataset (1,000 Rows) — italy_14_lis_p","text":"primary purpose dataset, lissyuse_locally() function, allow users build test code locally, simulating execution running LISSY (LIS user interface) using lissyuse() function.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/italy_14_lis_p.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Individual-Level LIS Dataset (1,000 Rows) — italy_14_lis_p","text":"","code":"if (FALSE) { # \\dontrun{ italy_14_lis_p } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/italy_14_lws_h.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Household-Level LWS Dataset (1,000 Rows) — italy_14_lws_h","title":"Sample Household-Level LWS Dataset (1,000 Rows) — italy_14_lws_h","text":"dataset provides household-level data LWS database 1,000 rows, designed exploration user interaction. automatically loaded lissyuse_locally() whenever Italy selected along least one household-level variable (e.g., \"region_c\") lws argument set TRUE.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/italy_14_lws_h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Household-Level LWS Dataset (1,000 Rows) — italy_14_lws_h","text":"","code":"italy_14_lws_h"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/italy_14_lws_h.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample Household-Level LWS Dataset (1,000 Rows) — italy_14_lws_h","text":"Data frame 1,000 rows 214 columns.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/italy_14_lws_h.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample Household-Level LWS Dataset (1,000 Rows) — italy_14_lws_h","text":"primary purpose dataset, lissyuse_locally() function, allow users build test code locally, simulating execution running LISSY (LIS user interface) using lissyuse() function.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/italy_14_lws_h.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Household-Level LWS Dataset (1,000 Rows) — italy_14_lws_h","text":"","code":"if (FALSE) { # \\dontrun{ italy_14_lws_h } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/italy_14_lws_p.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Individual-Level LWS Dataset (1,000 Rows) — italy_14_lws_p","title":"Sample Individual-Level LWS Dataset (1,000 Rows) — italy_14_lws_p","text":"dataset provides individual-level data LWS database 1,000 rows, designed exploration user interaction. automatically loaded lissyuse_locally() whenever Italy selected along least one individual-level variable (e.g., \"age\") lws argument set TRUE.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/italy_14_lws_p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Individual-Level LWS Dataset (1,000 Rows) — italy_14_lws_p","text":"","code":"italy_14_lws_p"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/italy_14_lws_p.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample Individual-Level LWS Dataset (1,000 Rows) — italy_14_lws_p","text":"Data frame 1,000 rows 133 columns.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/italy_14_lws_p.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample Individual-Level LWS Dataset (1,000 Rows) — italy_14_lws_p","text":"primary purpose dataset, lissyuse_locally() function, allow users build test code locally, simulating execution running LISSY (LIS user interface) using lissyuse() function.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/italy_14_lws_p.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Individual-Level LWS Dataset (1,000 Rows) — italy_14_lws_p","text":"","code":"if (FALSE) { # \\dontrun{ italy_14_lws_p } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/lissy_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Wrap over 'purrr::imap()' for lissy files — lissy_map","title":"Wrap over 'purrr::imap()' for lissy files — lissy_map","text":"wrap 'purrr::imap()' keeps lissy attributes output list.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/lissy_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Wrap over 'purrr::imap()' for lissy files — lissy_map","text":"","code":"lissy_map(lissy_files, .f)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/lissy_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Wrap over 'purrr::imap()' for lissy files — lissy_map","text":"lissy_files list LIS LWS p-level files. .f function, formula, vector (necessarily atomic) argument purrr::map name.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/lissy_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Wrap over 'purrr::imap()' for lissy files — lissy_map","text":"list like lissy_files","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/lissyrtools.html","id":null,"dir":"Reference","previous_headings":"","what":"lissyrtools: Functions that can be used within LISSY — lissyrtools","title":"lissyrtools: Functions that can be used within LISSY — lissyrtools","text":"package tools needed develop scripts LIS data. allows users : Read LIS data within LISSY environment, use LIS sample files locally. Carry commonly performed data cleaning tasks. Compute estimates microdata.","code":""},{"path":[]},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/lissyrtools.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"lissyrtools: Functions that can be used within LISSY — lissyrtools","text":"Maintainer: Gonçalo Marques marques@lisdatacenter.org Authors: Josep Espasa Reig jespasareig@gmail.com","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/lissyuse.html","id":null,"dir":"Reference","previous_headings":"","what":"Load data easily and efficiently with lissyuse — lissyuse","title":"Load data easily and efficiently with lissyuse — lissyuse","text":"lissyuse() enables user specify variables import, along set default variables (IDs, weights, currency, year, relation, etc.). household-level person-level variables specified, lissyuse() automatically merge two types files. faster efficient processing, strongly recommend selecting restricted set variables vars argument. Additionally, function includes subset argument allows users limit data specific subgroup.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/lissyuse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load data easily and efficiently with lissyuse — lissyuse","text":"","code":"lissyuse(   data = NULL,   vars = NULL,   subset = NULL,   from = NULL,   to = NULL,   lws = FALSE )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/lissyuse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load data easily and efficiently with lissyuse — lissyuse","text":"data character vector containing ISO2 country codes, /country-year specific datasets ccyy format. vars character vector specifying LIS/LWS variables loaded. subset logical expression defining criteria subsetting data. Observations expression evaluates TRUE included subset. numeric value representing year (inclusive) LIS/LWS datasets loaded. numeric value representing year (inclusive) LIS/LWS datasets loaded. lws logical value indicating whether load LWS data. TRUE, LWS data loaded; otherwise (default: FALSE), LIS data loaded instead. Note eliminate need set ‘Project’ field accordingly LISSY remote system.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/lissyuse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load data easily and efficiently with lissyuse — lissyuse","text":"list whose elements data frame named respective dataset. See naming formats examples . data frame contain many columns selected variables, plus default technical ones.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/lissyuse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load data easily and efficiently with lissyuse — lissyuse","text":"","code":"if (FALSE) { # \\dontrun{ library(lissyrtools)  lis_datasets <- lissyuse(data = c(\"it\", \"de16\", \"us19\"), vars  = c(\"dhi\", \"region_c\", \"age\", \"hourstot\", \"status1\"), subset = \"!is.na(status1) & relation %in% c(1000,2000)\") # Checking the names of the data frames.  names(lis_datasets)  # Selecting certain elemennts of the list  lis_datasets[[\"it14\"]]   # By their name lis_datasets[1:3]        # By their respective order within lis_datasets  # Selecting all the italian datasets, while restrict them to a certain year range.  lis_datasets <- lissyuse( data = c(\"it\"), vars  = c(\"dhi\", \"region_c\"), from = 2004, to = 2016)  # In the previous line only household-level variables were selected.  # this will lead to slightly different names for the data frames.  names(lis_datasets)  # The same occurs when only person-level variables were selected  lis_datasets <- lissyuse(data = c(\"it\"), vars  = c(\"age\", \"sex\"), from = 2004, to = 2016)  names(lis_datasets)   # ------------ LWS ------------------   lws_datasets <- lissyuse(data = c(\"us\", \"uk17\", \"uk19\"), vars = \"dnw\", from = 2015, to = 2021, lws = TRUE)  names(lws_datasets) } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/merge_dataset_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge household and person-level files — merge_dataset_levels","title":"Merge household and person-level files — merge_dataset_levels","text":"Merges household person-level files datasets. level files 'lissy_hfiles' 'lissy_pfiles' determined 'level' attribute files.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/merge_dataset_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge household and person-level files — merge_dataset_levels","text":"","code":"merge_dataset_levels(lissy_hfiles, lissy_pfiles)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/merge_dataset_levels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge household and person-level files — merge_dataset_levels","text":"lissy_hfiles list household-level files. lissy_pfiles list person-level files.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/merge_dataset_levels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge household and person-level files — merge_dataset_levels","text":"list merged files.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/merge_lis_dataset_levels.html","id":null,"dir":"Reference","previous_headings":"","what":"Merges a hfile with its pfile — merge_lis_dataset_levels","title":"Merges a hfile with its pfile — merge_lis_dataset_levels","text":"used within 'merge_dataset_levels()'","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/merge_lis_dataset_levels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merges a hfile with its pfile — merge_lis_dataset_levels","text":"","code":"merge_lis_dataset_levels(hfile, pfile, hfile_name, pfile_name)  merge_lws_dataset_levels(hfile, pfile, hfile_name, pfile_name)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/mexico_18_lis_h.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Household-Level LIS Dataset (1,000 Rows) — mexico_18_lis_h","title":"Sample Household-Level LIS Dataset (1,000 Rows) — mexico_18_lis_h","text":"dataset provides household-level data LIS database 1,000 rows, designed exploration user interaction. automatically loaded lissyuse_locally() whenever Mexico selected along least one household-level variable (e.g., \"region_c\").","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/mexico_18_lis_h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Household-Level LIS Dataset (1,000 Rows) — mexico_18_lis_h","text":"","code":"mexico_18_lis_h"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/mexico_18_lis_h.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample Household-Level LIS Dataset (1,000 Rows) — mexico_18_lis_h","text":"Data frame 1,000 rows 112 columns.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/mexico_18_lis_h.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample Household-Level LIS Dataset (1,000 Rows) — mexico_18_lis_h","text":"primary purpose dataset, lissyuse_locally() function, allow users build test code locally, simulating execution running LISSY (LIS user interface) using lissyuse() function.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/mexico_18_lis_h.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Household-Level LIS Dataset (1,000 Rows) — mexico_18_lis_h","text":"","code":"if (FALSE) { # \\dontrun{ mexico_18_lis_h } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/mexico_18_lis_p.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Individual-Level LIS Dataset (1,000 Rows) — mexico_18_lis_p","title":"Sample Individual-Level LIS Dataset (1,000 Rows) — mexico_18_lis_p","text":"dataset provides individual-level data LIS database 1,000 rows, designed exploration user interaction. automatically loaded lissyuse_locally() whenever Mexico selected along least one individual-level variable (e.g., \"age\").","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/mexico_18_lis_p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Individual-Level LIS Dataset (1,000 Rows) — mexico_18_lis_p","text":"","code":"mexico_18_lis_p"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/mexico_18_lis_p.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample Individual-Level LIS Dataset (1,000 Rows) — mexico_18_lis_p","text":"Data frame 1,000 rows 97 columns.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/mexico_18_lis_p.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample Individual-Level LIS Dataset (1,000 Rows) — mexico_18_lis_p","text":"primary purpose dataset, lissyuse_locally() function, allow users build test code locally, simulating execution running LISSY (LIS user interface) using lissyuse() function.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/mexico_18_lis_p.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Individual-Level LIS Dataset (1,000 Rows) — mexico_18_lis_p","text":"","code":"if (FALSE) { # \\dontrun{ mexico_18_lis_p } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/missing_or_zero_vars_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Variable Status Data Frame — missing_or_zero_vars_all","title":"Variable Status Data Frame — missing_or_zero_vars_all","text":"data frame identifies whether variable consists zeros missing values given country year.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/missing_or_zero_vars_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variable Status Data Frame — missing_or_zero_vars_all","text":"","code":"missing_or_zero_vars_all"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/missing_or_zero_vars_all.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Variable Status Data Frame — missing_or_zero_vars_all","text":"data frame 6 variables:","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/missing_values_in_variable_warning.html","id":null,"dir":"Reference","previous_headings":"","what":"Missing values in variable warning — missing_values_in_variable_warning","title":"Missing values in variable warning — missing_values_in_variable_warning","text":"Triggers warning missing values 'variable' warning triggered .","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/missing_values_in_variable_warning.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Missing values in variable warning — missing_values_in_variable_warning","text":"","code":"missing_values_in_variable_warning(file, file_name, variable)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/missing_values_in_variable_warning.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Missing values in variable warning — missing_values_in_variable_warning","text":"file LIS LWS file. file_name name LIS LWS file. variable string variable name.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/missing_values_in_variable_warning.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Missing values in variable warning — missing_values_in_variable_warning","text":"Uses option store names files variables missing values already triggered warning . option stored : 'file_namewarning_NAsvariable'.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/n_numbers_smaller.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of elements smaller than input — n_numbers_smaller","title":"Number of elements smaller than input — n_numbers_smaller","text":"Computes number elements 'numbers' smaller elements input 'x'.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/n_numbers_smaller.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of elements smaller than input — n_numbers_smaller","text":"","code":"n_numbers_smaller(x, numbers)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/n_numbers_smaller.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of elements smaller than input — n_numbers_smaller","text":"x numeric vector input elements numbers numeric vector numbers ","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/n_numbers_smaller.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of elements smaller than input — n_numbers_smaller","text":"vector integer values length x","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/paste_lissy_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Paste lissy attributes — paste_lissy_attributes","title":"Paste lissy attributes — paste_lissy_attributes","text":"Implements returns 'lissy_object' 'lissy_attributes' 'lissy_attributes NULL. Else, just returns 'lissy_object'.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/paste_lissy_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Paste lissy attributes — paste_lissy_attributes","text":"","code":"paste_lissy_attributes(lissy_object, lissy_attributes)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/paste_lissy_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Paste lissy attributes — paste_lissy_attributes","text":"lissy_object list tibbles tibble. lissy_attributes list attributes NULL value, obtained 'get_lissy_attributes()'.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/paste_lissy_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Paste lissy attributes — paste_lissy_attributes","text":"tibble.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":[]},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/plot_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot an indicator using a bar plot. — plot_bar","text":"","code":"plot_bar(results_df)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/plot_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot an indicator using a bar plot. — plot_bar","text":"results_df data frame results indicator.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/plot_bar.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot an indicator using a bar plot. — plot_bar","text":"ggplot2 plot.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/plot_indicator.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot an Indicator. — plot_indicator","title":"Plot an Indicator. — plot_indicator","text":"Computes indicator plots one multiple LIS LWS datasets.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/plot_indicator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot an Indicator. — plot_indicator","text":"","code":"plot_indicator(   lissy_files,   variable,   indicator,   weight = NULL,   type = NULL,   plot_theme = NULL,   ratio = NULL,   epsilon = NULL,   na.rm = FALSE,   files_level = NULL,   variable_level = NULL )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/plot_indicator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot an Indicator. — plot_indicator","text":"lissy_files list LIS LWS files. variable character string indicating aggregate indicator needs computed. indicator character string indicating type indicator statistic computed. Currently function supports 'mean', 'median', 'ratio' 'gini'. weight string name variable 'file' used sample weights. NULL (default), function tries guess needed weight compute indicator. guess made information files_level variable_level. type character vector indicating type plot used. Valid inputs 'line' 'bar'. NULL (default), function tries guess appropriate plot type based structure input data frame. ratio vector two numeric values 0 1.used computation 'ratio' indicator. Defines percentiles numerator denominator respectively. E.g. (0.9, 0.1) computes 90/10 ratio. epsilon numeric vector length one. used computation 'atkinson' indicator'. inequality adversion parameter. Needs epsilon > 0. na.rm boolean. Indicates NAs ignored. Defaults FALSE. files_level string indicating level file. Valid inputs : 'household', 'h', 'person' 'p'. NULL (default), file level retrived 'lissy_files' attributes. variable_level Level variable. either 'household', 'h', 'person' 'p'. NULL (default), function try guess level variable. done comparing value 'variable' pre-set lists variables.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/plot_indicator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot an Indicator. — plot_indicator","text":"ggplot2 plot.","code":""},{"path":[]},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/plot_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot an indicator using a line plot. — plot_line","text":"","code":"plot_line(results_df)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/plot_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot an indicator using a line plot. — plot_line","text":"results_df data frame results indicator.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/plot_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot an indicator using a line plot. — plot_line","text":"ggplot2 plot.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/print_all_lissy_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Print all available files — print_all_lissy_files","title":"Print all available files — print_all_lissy_files","text":"Display available LISSY files.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/print_all_lissy_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print all available files — print_all_lissy_files","text":"","code":"print_all_lissy_files(database)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/print_all_lissy_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print all available files — print_all_lissy_files","text":"","code":"if (FALSE) { # \\dontrun{ print_all_lissy_files() } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/print_atkinson.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the Atkinson Index — print_atkinson","title":"Print the Atkinson Index — print_atkinson","text":"Computes displays Atkinson index given variable across multiple files.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/print_atkinson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the Atkinson Index — print_atkinson","text":"","code":"print_atkinson(   lissy_files,   variable,   epsilon,   weight = NULL,   na.rm = FALSE,   files_level = NULL,   variable_level = NULL )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/print_atkinson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print the Atkinson Index — print_atkinson","text":"lissy_files list LIS LWS files. variable character string indicating variable Atkinson index needs computed. epsilon numeric vector length one. inequality aversion parameter. Needs epsilon > 0. weight string name variable 'file' used sample weights. NULL (default), function tries guess needed weight compute Atkinson index. guess made based information files_level variable_level. na.rm boolean. Indicates NAs ignored. Defaults FALSE. files_level string indicating level file. Valid inputs : 'household', 'h', 'person' 'p'. NULL (default), file level retrieved 'lissy_files' attributes. variable_level Level variable. either 'household', 'h', 'person' 'p'. NULL (default), function try guess level variable. done comparing value 'variable' pre-set lists variables.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/print_atkinson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print the Atkinson Index — print_atkinson","text":"numeric vector containing Atkinson index file.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/print_atkinson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print the Atkinson Index — print_atkinson","text":"","code":"if (FALSE) { # \\dontrun{ lissy_files <- read_lissy_files(c(\"file1\", \"file2\")) print_atkinson(lissy_files = lissy_files, variable = \"income\", epsilon = 0.5) } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/print_gini.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the Gini Coefficient — print_gini","title":"Print the Gini Coefficient — print_gini","text":"Computes displays Gini coefficient given variable across multiple files.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/print_gini.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the Gini Coefficient — print_gini","text":"","code":"print_gini(   lissy_files,   variable,   weight = NULL,   na.rm = FALSE,   files_level = NULL,   variable_level = NULL )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/print_gini.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print the Gini Coefficient — print_gini","text":"lissy_files list LIS LWS files. variable character string indicating variable Gini coefficient needs computed. weight string name variable 'file' used sample weights. NULL (default), function tries guess needed weight compute Gini coefficient. guess made based information files_level variable_level. na.rm boolean. Indicates NAs ignored. Defaults FALSE. files_level string indicating level file. Valid inputs : 'household', 'h', 'person' 'p'. NULL (default), file level retrieved 'lissy_files' attributes. variable_level Level variable. either 'household', 'h', 'person' 'p'. NULL (default), function try guess level variable. done comparing value 'variable' pre-set lists variables.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/print_gini.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print the Gini Coefficient — print_gini","text":"numeric vector containing Gini coefficient file.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/print_gini.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print the Gini Coefficient — print_gini","text":"","code":"if (FALSE) { # \\dontrun{ lissy_files <- read_lissy_files(c(\"file1\", \"file2\")) print_gini(lissy_files = lissy_files, variable = \"income\") } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/print_indicator.html","id":null,"dir":"Reference","previous_headings":"","what":"Print an indicator — print_indicator","title":"Print an indicator — print_indicator","text":"Computes displays indicator chosen 'indicator' argument.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/print_indicator.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print an indicator — print_indicator","text":"","code":"print_indicator(   lissy_files,   variable,   indicator,   weight = NULL,   ratio = NULL,   epsilon = NULL,   na.rm = FALSE,   files_level = NULL,   variable_level = NULL )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/print_indicator.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print an indicator — print_indicator","text":"lissy_files list LIS LWS files. variable character string indicating aggregate indicator needs computed. indicator character string indicating type indicator statistic computed. Currently function supports 'mean', 'median', 'ratio', 'gini' 'atkinson'. 'ratio' selected, user must pass value 'ratio' parameter. 'atkinson', user mus pass value 'epsilon'. weight string name variable 'file' used sample weights. NULL (default), function tries guess needed weight compute indicator. guess made information files_level variable_level. ratio vector two numeric values 0 1.used computation 'ratio' indicator. Defines percentiles numerator denominator respectively. E.g. (0.9, 0.1) computes 90/10 ratio. epsilon numeric vector length one. used computation 'atkinson' indicator'. inequality adversion parameter. Needs epsilon > 0. na.rm boolean. Indicates NAs ignored. Defaults FALSE. files_level string indicating level file. Valid inputs : 'household', 'h', 'person' 'p'. NULL (default), file level retrived 'lissy_files' attributes. variable_level Level variable. either 'household', 'h', 'person' 'p'. NULL (default), function try guess level variable. done comparing value 'variable' pre-set lists variables.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/print_indicator.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print an indicator — print_indicator","text":"numeric vector.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/print_percentiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Print percentiles. — print_percentiles","title":"Print percentiles. — print_percentiles","text":"Computes displays percentiles cumulative percentiles variable.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/print_percentiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print percentiles. — print_percentiles","text":"","code":"print_percentiles(   lissy_files,   variable,   breaks = seq(0, 1, 0.1),   weight = NULL,   na.rm = FALSE )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/print_percentiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print percentiles. — print_percentiles","text":"lissy_files list LIS LWS files. variable character vector length one. breaks numeric vector specifying percentiles computed. Defaults deciles. weight string name variable 'file' used sample weights. na.rm boolean indicating missing values ignored. Defaults FALSE.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/print_percentiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print percentiles. — print_percentiles","text":"tibble percentile absolute cummulative values.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/print_percentiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print percentiles. — print_percentiles","text":"","code":"if (FALSE) { # \\dontrun{ lissy_files <- read_lissy_files(c(\"fr84h\", \"fr94h\", \"fr10h\")) print_percentiles(lissy_files = lissy_files, variable = \"dhi\") } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/print_ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Print the Ratio Index — print_ratio","title":"Print the Ratio Index — print_ratio","text":"Computes displays ratio index given variable across multiple files.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/print_ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print the Ratio Index — print_ratio","text":"","code":"print_ratio(   lissy_files,   variable,   ratio,   weight = NULL,   na.rm = FALSE,   files_level = NULL,   variable_level = NULL )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/print_ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print the Ratio Index — print_ratio","text":"lissy_files list LIS LWS files. variable character string indicating variable ratio index needs computed. ratio vector two numeric values 0 1. Defines percentiles numerator denominator respectively. E.g. (0.9, 0.1) computes 90/10 ratio. weight string name variable 'file' used sample weights. NULL (default), function tries guess needed weight compute ratio index. guess made based information files_level variable_level. na.rm boolean. Indicates NAs ignored. Defaults FALSE. files_level string indicating level file. Valid inputs : 'household', 'h', 'person' 'p'. NULL (default), file level retrieved 'lissy_files' attributes. variable_level Level variable. either 'household', 'h', 'person' 'p'. NULL (default), function try guess level variable. done comparing value 'variable' pre-set lists variables.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/print_ratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print the Ratio Index — print_ratio","text":"numeric vector containing ratio index file.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/print_ratio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print the Ratio Index — print_ratio","text":"","code":"if (FALSE) { # \\dontrun{ lissy_files <- read_lissy_files(c(\"file1\", \"file2\")) print_ratio(lissy_files = lissy_files, variable = \"income\", ratio = c(0.9, 0.1)) } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/read_LIS.html","id":null,"dir":"Reference","previous_headings":"","what":"Read LIS — read_LIS","title":"Read LIS — read_LIS","text":"modified version original read.LIS function. used lower-level function read single files 'read_lissy_files' 'read_lissy_files_locally'. Contains following amendments original function: used lower-level function takes single file name reads single file time. uses 'haven::read_dta()' function read data instead 'readstata13::read.dta13()'. incorporates code previous lower-level function 'read.LIS.data' (modified). informative errors file name passed correct. informative errors multiple possible files import. 'subset' argument eliminated many users might selecting subsets rows.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/read_LIS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read LIS — read_LIS","text":"","code":"read_LIS(LIS_DIR, file_name, col_select = NULL)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/read_LIS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read LIS — read_LIS","text":"LIS_DIR string directory file read stored. file_name string name file import 'ccyydl' 'ccyyyydl' format. E.g 'fr84ih', 'fr1984ih'. col_select string vector names variables read. NULL (default), variables file read.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/read_file_name_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the format of a file name — read_file_name_format","title":"Read the format of a file name — read_file_name_format","text":"Read format file name","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/read_file_name_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the format of a file name — read_file_name_format","text":"","code":"read_file_name_format(file_name)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/read_file_name_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the format of a file name — read_file_name_format","text":"file_name string name file.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/read_file_name_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the format of a file name — read_file_name_format","text":"string indicating format file.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/read_format_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the format of files argument — read_format_names","title":"Read the format of files argument — read_format_names","text":"Use 'read_file_name_format' instead. Detects format 'file' argument passed 'read_lissy_files_locally()' returns 'two digit country, two digit year, one digit level (optional)' format. names files function can read need indicate country ('c'), year ('y') household person level dataset ('l'). addition, can optionally indicate LIS, LWS ERFLIS dataset ('d'). information can following formats: 'ccyyl' Two digit country, two digit year, one digit level. E.g. \"fr84h\" 'ccyyyyl' Two digit country, four digit year, one digit household/person ('h' 'p'). E.g. \"fr1984h\" 'ccyydl' Two digit country, two digit year, one digit indicating LIS, LWS ERFLIS (/w/e/r), one digit household/person. E.g. \"fr84ih\" 'ccyyyydl' Two digit country, two digit year,one digit indicating LIS, LWS ERFLIS (/w/e/r), one digit household/person. E.g. \"fr1984ih\" can contain printable characters pattern (e.g. 'fr84ih_new'). @return file name format 'ccyydl' 'ccyyl' depending information database provided .","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/read_format_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the format of files argument — read_format_names","text":"","code":"read_format_names(file_name)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/read_lissy_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Read files in LISSY — read_lissy_files","title":"Read files in LISSY — read_lissy_files","text":"Reads multiple LIS, LWS ERFLIS files LISSY interface. files need database (e.g. LIS, LWS) level (e.g. 'household', 'person') Computes full year four digits default.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/read_lissy_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read files in LISSY — read_lissy_files","text":"","code":"read_lissy_files(files, col_select = NULL, full_year_names = TRUE)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/read_lissy_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read files in LISSY — read_lissy_files","text":"files character vector containing file names 'ccyyl' format. files need level (.e. 'household', 'person'). E.g. c(\"it14h\", \"us16h\") col_select character vector name variables selected files. E.g. c(\"hid\", \"dhi\", \"hifactor\"). full_year_names boolean. name imported file changed 'ccyyyyl' format.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/read_lissy_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read files in LISSY — read_lissy_files","text":"named list loaded files.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/read_lissy_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read files in LISSY — read_lissy_files","text":"","code":"if (FALSE) { # \\dontrun{ read_lissy_files(c(\"fr84h\", \"fr94h\", \"fr10h\")) } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/read_lissy_files_locally.html","id":null,"dir":"Reference","previous_headings":"","what":"Read files locally — read_lissy_files_locally","title":"Read files locally — read_lissy_files_locally","text":"Reads multiple LIS LWS files outside LISSY interface.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/read_lissy_files_locally.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read files locally — read_lissy_files_locally","text":"","code":"read_lissy_files_locally(   files,   path_to_files,   col_select = NULL,   full_year_names = TRUE )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/read_lissy_files_locally.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read files locally — read_lissy_files_locally","text":"files character vector containing file names. need contain country, year, database level elements beginning name 'ccyydl', 'ccyyyydl' format. E.g. c(\"it14ih\", \"us16ih\") c(\"it14ih_modified.dta\", \"us16ih_mydata.dta\") path_to_files character string directory files can found. order match files passed 'files'. col_select character vector name variables selected files. E.g. c(\"hid\", \"dhi\", \"hifactor\"). full_year_names boolean. name imported file changed 'ccyyyyl' format.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/read_lissy_files_locally.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read files locally — read_lissy_files_locally","text":"named list loaded files.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/read_lissy_files_locally.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read files locally — read_lissy_files_locally","text":"","code":"if (FALSE) { # \\dontrun{ read_lissy_files_locally(c(\"fr84h\", \"fr94h\", \"fr10h\"), path_to_files = \"/home/user/files/\") } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/read_rename_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename read files — read_rename_files","title":"Rename read files — read_rename_files","text":"'   Uses character vector manually change names files previously read.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/read_rename_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename read files — read_rename_files","text":"","code":"read_rename_files(list_files, new_names)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/read_rename_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename read files — read_rename_files","text":"list_files list LIS LWS datasets. new_names character string new names files.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/read_rename_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename read files — read_rename_files","text":"list loaded files new names.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/read_rename_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename read files — read_rename_files","text":"","code":"if (FALSE) { # \\dontrun{ files <- read_lissy_files_locally(c(\"fr84h\", \"fr94h\", \"fr10h\")) files %<>%     read_rename_files(new_names = c(\"France_1984_household\",                                     \"France_1994_household\",                                     \"France_2010_household\")) } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/remove_dname_with_missings_in_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Is Canada LWS on the loaded data ? — remove_dname_with_missings_in_weights","title":"Is Canada LWS on the loaded data ? — remove_dname_with_missings_in_weights","text":"Auxilliary function remove p-level Canadian datasets LWS, list loaded datasets, weights","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/remove_dname_with_missings_in_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is Canada LWS on the loaded data ? — remove_dname_with_missings_in_weights","text":"","code":"remove_dname_with_missings_in_weights(list, wgt_name)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/remove_dname_with_missings_in_weights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is Canada LWS on the loaded data ? — remove_dname_with_missings_in_weights","text":"list","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/retrieve_database_from_directory.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the database from a directory string — retrieve_database_from_directory","title":"Get the database from a directory string — retrieve_database_from_directory","text":"Get database directory string","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/retrieve_database_from_directory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the database from a directory string — retrieve_database_from_directory","text":"","code":"retrieve_database_from_directory()"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/retrieve_names_key_variables.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve names of key variables — retrieve_names_key_variables","title":"Retrieve names of key variables — retrieve_names_key_variables","text":"Retrieve names key variables given database level. used within 'read_lissy_files()' 'read_lissy_files_locally()'.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/retrieve_names_key_variables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve names of key variables — retrieve_names_key_variables","text":"","code":"retrieve_names_key_variables(database, level)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/retrieve_names_key_variables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve names of key variables — retrieve_names_key_variables","text":"database string indicating database key variables retrieved (e.g. 'lis', '', 'lws', 'w') level string indicating level key variables retrieved (e.g. 'person', 'p', 'household', 'h')","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/retrieve_names_key_variables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve names of key variables — retrieve_names_key_variables","text":"character vector names key variables given database level.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/return_desired_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a file name with the requested format — return_desired_format","title":"Return a file name with the requested format — return_desired_format","text":"Combines information passed returns format stipulated argument 'to_format'.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/return_desired_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a file name with the requested format — return_desired_format","text":"","code":"return_desired_format(country, year, database, level, to_format)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/return_desired_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a file name with the requested format — return_desired_format","text":"country string country 'cc'. year string four digit year 'yyyy'. database string database 'd'. level string level 'l'. to_format string desired format.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/return_desired_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a file name with the requested format — return_desired_format","text":"string file name stipulated format.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/return_desired_format.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Return a file name with the requested format — return_desired_format","text":"used inside 'change_file_name_format()'.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_atkinson.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Weighted Atkinson Across a List of Data Frames — run_weighted_atkinson","title":"Compute Weighted Atkinson Across a List of Data Frames — run_weighted_atkinson","text":"Compute Weighted Atkinson Across List Data Frames","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_atkinson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Weighted Atkinson Across a List of Data Frames — run_weighted_atkinson","text":"","code":"run_weighted_atkinson(   data_list,   var_name,   wgt_name = NULL,   epsilon,   na.rm = TRUE )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_atkinson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Weighted Atkinson Across a List of Data Frames — run_weighted_atkinson","text":"data_list named list data frames, (e.g., across countries years). var_name string specifying variable name (e.g., \"dhi\", \"pilabour\") compute Atkinson index . wgt_name optional string specifying weight variable used. NULL, equal weights assumed. epsilon positive inequality aversion parameter. Must greater 0. na.rm Logical. TRUE, missing values var_name wgt_name removed.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_atkinson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Weighted Atkinson Across a List of Data Frames — run_weighted_atkinson","text":"named list. list element named country contains named numeric vector, names years values computed statistics.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_atkinson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Weighted Atkinson Across a List of Data Frames — run_weighted_atkinson","text":"","code":"if (FALSE) { # \\dontrun{ datasets <- lissyrtools::lissyuse(data = c(\"de\", \"es\", \"uk\"), vars = c(\"dhi\"), from = 2016)   datasets %>%   map(~ .x %>% mutate(new_wgt = hwgt * nhhmem)) %>%    apply_iqr_top_bottom_coding(\"dhi\", \"hwgt\") %>%    apply_sqrt_equivalisation(\"dhi\") %>%   run_weighted_atkinson(\"dhi\", \"new_wgt\", epsilon = 0.5)    # Negative values are not allowed in the variable for which we are computing the Atkinson index.  # If we remove the top and bottom coding stage from the example above, we will get an error with a warning regarding the datasets containing negative values.   datasets[1:4] %>%   map(~ .x %>% mutate(new_wgt = hwgt * nhhmem)) %>%    apply_sqrt_equivalisation(\"dhi\") %>%   run_weighted_atkinson(\"dhi\", \"new_wgt\", epsilon = 0.5)   } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute (weighted) counts or percentages from a list of data frames — run_weighted_count","title":"Compute (weighted) counts or percentages from a list of data frames — run_weighted_count","text":"function calculates (weighted) category counts percentages given categorical variable across list data frames (e.g., country year). Optionally, results can grouped another categorical variable.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute (weighted) counts or percentages from a list of data frames — run_weighted_count","text":"","code":"run_weighted_count(   data_list,   var_name,   wgt_name = NULL,   na.rm = FALSE,   by = NULL,   percent = FALSE )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute (weighted) counts or percentages from a list of data frames — run_weighted_count","text":"data_list named list data frames, (e.g., across countries years). var_name string specifying name categorical variable counts percentages computed. must listed lissyrtools::lis_categorical_variables lissyrtools::lws_wealth_categorical_variables. wgt_name (Optional) string specifying name weight variable apply. NULL, unweighted counts used. na.rm Logical; TRUE, observations missing values var_name removed computing counts percentages. (Optional) string naming second categorical variable disaggregation. Results split variable. Must also listed allowed categorical variables. percent Logical; TRUE, function returns weighted (unweighted) percentages. FALSE, returns simple category counts.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute (weighted) counts or percentages from a list of data frames — run_weighted_count","text":"named list. NULL: list element named country contains named numeric vector, names years values counts percentages. NULL: list element named ccyy (country-year) identifiers contains named numeric vector, names represent -categories (e.g., gender, region) values corresponding counts percentages.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_count.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute (weighted) counts or percentages from a list of data frames — run_weighted_count","text":"data frame variable contains NAs dropped, warning.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute (weighted) counts or percentages from a list of data frames — run_weighted_count","text":"","code":"if (FALSE) { # \\dontrun{  data <- lissyrtools::lissyuse(data = c(\"de\", \"es\", \"uk\"), vars = c(\"dhi\", \"region_c\", \"area_c\", \"educ\", \"emp\"), from = 2016)   run_weighted_count(  data[names(data)[stringr::str_sub(names(data),3,4) == \"18\"]],   var_name =\"educ\",   by = \"emp\",   percent = FALSE,   na.rm = TRUE )  # Specify `percent` = TRUE, to output percentages, unweighted or weighted. run_weighted_count(  data[names(data)[stringr::str_sub(names(data),3,4) == \"18\"]],   var_name =\"region_c\",   percent = TRUE,   na.rm = FALSE )  # It is also possible to check the share of missings.  run_weighted_count(  data[names(data)[stringr::str_sub(names(data),3,4) == \"18\"]],   var_name =\"region_c\",   percent = TRUE,   na.rm = TRUE )     # When `percent` = FALSE, and `wgt_name` is specified, it will be ignore and an unweighted count will be applied. run_weighted_count(  data[names(data)[stringr::str_sub(names(data),3,4) == \"18\"]],   var_name =\"region_c\",   wgt_name = \"hpopwgt\",  percent = FALSE,  na.rm = TRUE )   #  Datasets where the variable in the `var_name` argument is only made of NA's will not be considered. run_weighted_count(  data[names(data)[stringr::str_sub(names(data),3,4) == \"18\"]],   var_name =\"area_c\",   percent = FALSE,  na.rm = TRUE )   # The same logic is applied with the `by` argument. run_weighted_count( data[\"uk15\"],  \"educ\",  na.rm = TRUE,  by = \"area_c\" )  } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_gini.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Weighted Gini Index Across a List of Data Frames — run_weighted_gini","title":"Compute Weighted Gini Index Across a List of Data Frames — run_weighted_gini","text":"Compute Weighted Gini Index Across List Data Frames","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_gini.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Weighted Gini Index Across a List of Data Frames — run_weighted_gini","text":"","code":"run_weighted_gini(data_list, var_name, wgt_name = NULL, na.rm = TRUE)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_gini.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Weighted Gini Index Across a List of Data Frames — run_weighted_gini","text":"data_list named list data frames, (e.g., across countries years). var_name string specifying variable name (e.g., \"dhi\", \"pilabour\") compute Gini index . wgt_name optional string specifying weight variable used. NULL, equal weights assumed. na.rm Logical. TRUE, missing values var_name wgt_name removed.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_gini.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Weighted Gini Index Across a List of Data Frames — run_weighted_gini","text":"named list. list element named country contains named numeric vector, names years values computed statistics.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_gini.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Weighted Gini Index Across a List of Data Frames — run_weighted_gini","text":"","code":"if (FALSE) { # \\dontrun{ datasets <- lissyrtools::lissyuse(data = c(\"de\", \"es\", \"uk\"), vars = c(\"dhi\"), from = 2016)  datasets %>%   map(~ .x %>% mutate(new_wgt = hwgt * nhhmem)) %>%    apply_iqr_top_bottom_coding(\"dhi\", \"hwgt\") %>%    apply_sqrt_equivalisation(\"dhi\") %>%   run_weighted_gini(\"dhi\", \"new_wgt\") } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Weighted Mean Across a List of Data Frames (with optional grouping) — run_weighted_mean","title":"Compute Weighted Mean Across a List of Data Frames (with optional grouping) — run_weighted_mean","text":"Compute Weighted Mean Across List Data Frames (optional grouping)","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Weighted Mean Across a List of Data Frames (with optional grouping) — run_weighted_mean","text":"","code":"run_weighted_mean(   data_list,   var_name,   wgt_name = NULL,   na.rm = TRUE,   by = NULL )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Weighted Mean Across a List of Data Frames (with optional grouping) — run_weighted_mean","text":"data_list named list data frames, (e.g., across countries years). var_name string specifying variable name (e.g., \"dhi\", \"pilabour\") compute mean . wgt_name optional string specifying weight variable used. NULL, equal weights assumed. na.rm Logical. TRUE, missing values var_name wgt_name removed. Optional string giving name categorical variable split data within data frame computing mean.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Weighted Mean Across a List of Data Frames (with optional grouping) — run_weighted_mean","text":"named list. NULL: list element named country contains named numeric vector, names years values computed statistics. NULL: list element named ccyy (country-year) identifiers contains named numeric vector, names represent -categories (e.g., gender, region) values corresponding statistics.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_mean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Weighted Mean Across a List of Data Frames (with optional grouping) — run_weighted_mean","text":"","code":"if (FALSE) { # \\dontrun{ data <- lissyrtools::lissyuse(data = c(\"de\", \"es\", \"uk\"), vars = c(\"dhi\", \"age\", \"pi11\", \"region_c\", \"area_c\", \"educ\", \"emp\"), from = 2016)  data %>%  purrr::map(~ .x %>% filter(relation == 1000)) %>% run_weighted_mean(\"dhi\", \"hpopwgt\")  data %>%  purrr::map(~ .x %>% filter(age > 25 & age <65)) %>% run_weighted_mean(\"pi11\", \"ppopwgt\", by = \"educ\")  } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_percentiles.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Weighted Percentiles cross a List of Data Frames (with optional grouping) — run_weighted_percentiles","title":"Compute Weighted Percentiles cross a List of Data Frames (with optional grouping) — run_weighted_percentiles","text":"Applies compute_weighted_percentiles() function data frame named list, using specified variable optional weight. Supports optional grouping via categorical variable, returns either percentile values share values, depending share argument.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_percentiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Weighted Percentiles cross a List of Data Frames (with optional grouping) — run_weighted_percentiles","text":"","code":"run_weighted_percentiles(   data_list,   var_name,   wgt_name = NULL,   probs = seq(0, 1, 0.25),   type = c(\"type_4\", \"type_2\"),   share = FALSE,   na.rm = TRUE,   by = NULL )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_percentiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Weighted Percentiles cross a List of Data Frames (with optional grouping) — run_weighted_percentiles","text":"data_list named list data frames, (e.g., across countries years). var_name string specifying variable name (e.g., \"dhi\", \"pilabour\") compute percentiles shares . wgt_name optional string specifying weight variable used. NULL, equal weights assumed. probs numeric vector probabilities values 0 1, defining percentiles (share = FALSE) brackets shares computed (share = TRUE). type character string indicating percentile definition use. #' Either \"type_4\" (default, linear interpolation-based empirical cdf - continuous sample quantile) \"type_2\" (used Stata commands like collapse _pctile, inverse empirical distribution function averaging discontinuities - discontinuous sample quantile). share Logical. TRUE, returns income shares percentile brackets instead percentile values. Default FALSE. Note: always uses definition = \"type_4\" (interpolation), regardless definition parameter. combined definition = \"type_2\". na.rm Logical. TRUE, missing values var_name wgt_name removed. Optional string giving name categorical variable split data within data frame computing statistics.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_percentiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Weighted Percentiles cross a List of Data Frames (with optional grouping) — run_weighted_percentiles","text":"named list. == NULL, share == FALSE length(probs) == 1: list element named country contains named numeric vector, names years values computed statistics. == NULL, either share == TRUE length(probs) > 1: list element named ccyy (country-year) identifiers contains named numeric vector, names represent share intervals percentiles defined probs. != NULL: list ccyy identifiers keys. element sublist, named categories variable. sublist contains named numeric vector computed statistics.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_percentiles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Weighted Percentiles cross a List of Data Frames (with optional grouping) — run_weighted_percentiles","text":"Percentiles computed using weighted version quantile definition 4 Hyndman Fan (1996), default, quantile definition 2 specified. share = TRUE, function estimates Lorenz ordinates taking quantiles running sum ordered outcome variable (divided total), according quantile definition 4 .","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_percentiles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Weighted Percentiles cross a List of Data Frames (with optional grouping) — run_weighted_percentiles","text":"","code":"if (FALSE) { # \\dontrun{    # Import data my_data_list <- lissyuse(data = \"es\", from  = 2016)  # Retrieve the percentile estimates percentiles_result <- my_data_list %>%    run_weighted_percentiles(     var_name = \"dhi\",     wgt_name = \"hpopwgt\",     probs = seq(0.1, 0.9, 0.1),     type = \"type_2\",     na.rm = TRUE ) print(percentiles_result)  # Compute the distribution shares shares_result <- run_weighted_percentiles(     data_list = my_data_list,     var_name = \"dhi\",     wgt_name = \"hpopwgt\",     probs = seq(0, 1, 0.1),     share = TRUE,     na.rm = TRUE ) print(shares_result)  # Using the by option  by_result_median <- run_weighted_percentiles(     data_list = purrr::map(my_data_list[1:2], ~.x %>% filter(emp == 1)),     var_name = \"pi11\",     wgt_name = \"ppopwgt\",     probs = 0.5,     type = \"type_4\",     na.rm = TRUE,      by = \"region_c\"     ) print(by_result_median) } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_poverty_gap_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Poverty Gap Index — run_weighted_poverty_gap_index","title":"Compute the Poverty Gap Index — run_weighted_poverty_gap_index","text":"Calculates Foster–Greer–Thorbecke poverty gap index (FGT1) list datasets. index measures intensity poverty combining relative poverty rate average income shortfall (percentage poverty line) among poor.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_poverty_gap_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Poverty Gap Index — run_weighted_poverty_gap_index","text":"","code":"run_weighted_poverty_gap_index(   data_list,   var_name,   wgt_name,   times_median = 0.5,   type = c(\"type_4\", \"type_2\"),   na.rm = TRUE )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_poverty_gap_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Poverty Gap Index — run_weighted_poverty_gap_index","text":"data_list named list data frames. var_name string specifying variable name (e.g., \"dhi\", \"pilabour\"). wgt_name string. name weight variable. times_median numeric scalar. multiple median used define poverty threshold (default 0.5). type character vector indicating percentile estimation type (passed compute_weighted_percentiles). Default \"type_4\". na.rm Logical. missing values removed computation? Default TRUE.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_poverty_gap_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Poverty Gap Index — run_weighted_poverty_gap_index","text":"named list. list element named country contains named numeric vector, names years values computed poverty gap indices (bounded 0 1).","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_poverty_gap_index.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute the Poverty Gap Index — run_weighted_poverty_gap_index","text":"function multiplies relative poverty rate average relative poverty shortfall among poor, resulting FGT1 poverty gap index. result represents average poverty gap across entire population fraction poverty line.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_poverty_gap_index.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the Poverty Gap Index — run_weighted_poverty_gap_index","text":"","code":"if (FALSE) { # \\dontrun{ library(lissyrtools) library(purrr)  datasets <- lissyrtools::lissyuse(data = c(\"de\", \"es\", \"uk\"), vars = c(\"dhi\"), from = 2016)  datasets <- datasets %>%   map(~ .x %>% filter(!is.na(dhi))) %>%   map(~ .x %>% mutate(new_wgt = hwgt * nhhmem)) %>%   apply_iqr_top_bottom_coding(\"dhi\", \"hwgt\", type = \"type_2\") %>%   apply_sqrt_equivalisation(\"dhi\")  # Compute the FGT1 poverty gap index pgi <- run_weighted_poverty_gap_index(   data_list = datasets,   var_name = \"dhi\",   wgt_name = \"new_wgt\" )  print(pgi) } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_poverty_shortfall.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the Weighted Poverty Gap (Shortfall) — run_weighted_poverty_shortfall","title":"Compute the Weighted Poverty Gap (Shortfall) — run_weighted_poverty_shortfall","text":"Calculates average shortfall (gap) individual/household income relative poverty line, weighted population weights restricted poverty line.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_poverty_shortfall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the Weighted Poverty Gap (Shortfall) — run_weighted_poverty_shortfall","text":"","code":"run_weighted_poverty_shortfall(   data_list,   var_name,   wgt_name = NULL,   times_median = 0.5,   type = c(\"type_4\", \"type_2\"),   percent = FALSE,   na.rm = TRUE )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_poverty_shortfall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the Weighted Poverty Gap (Shortfall) — run_weighted_poverty_shortfall","text":"data_list named list data frames. var_name string specifying variable name (e.g., \"dhi\", \"pilabour\"). wgt_name string (optional). name weight variable. NULL, equal weights assumed. times_median numeric scalar. multiple median used define poverty threshold (default 0.5). type character vector indicating percentile estimation type (passed compute_weighted_percentiles). Default \"type_4\". percent Logical. TRUE, returns relative shortfall percentage poverty line. FALSE, returns absolute daily shortfall (default FALSE). na.rm Logical. missing values removed computation? Default TRUE.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_poverty_shortfall.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the Weighted Poverty Gap (Shortfall) — run_weighted_poverty_shortfall","text":"named list. list element named country contains named numeric vector, names years values represent: average daily shortfall monetary units (percent = FALSE), average relative shortfall percentage terms (percent = TRUE), among individuals households poverty threshold.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_poverty_shortfall.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute the Weighted Poverty Gap (Shortfall) — run_weighted_poverty_shortfall","text":"","code":"if (FALSE) { # \\dontrun{ library(lissyrtools) library(purrr)  datasets <- lissyrtools::lissyuse(data = c(\"de\", \"es\", \"uk\"), vars = c(\"dhi\"), from = 2016)  datasets <- datasets %>%   map(~ .x %>% filter(!is.na(dhi))) %>%   map(~ .x %>% mutate(new_wgt = hwgt * nhhmem)) %>%   apply_iqr_top_bottom_coding(\"dhi\", \"hwgt\", type = \"type_2\") %>%   apply_sqrt_equivalisation(\"dhi\")  # Compute average poverty shortfall in absolute (daily monetary) terms abs_gap <- run_weighted_poverty_shortfall(   data_list = datasets,   var_name = \"dhi\",   wgt_name = \"new_wgt\" )  # Compute average poverty shortfall in percentage of the poverty line rel_gap <- run_weighted_poverty_shortfall(   data_list = datasets,   var_name = \"dhi\",   wgt_name = \"new_wgt\",   percent = TRUE )  # Compute average poverty shortfall in absolute (daily monetary) terms, converted to international dollars at 2017 prices.  abs_gap_dollars <- datasets %>%    apply_ppp_adjustment(\"dhi\", \"lis\", \"lisppp\") %>%    run_weighted_poverty_shortfall(   var_name = \"dhi\",   wgt_name = \"new_wgt\" )  print(abs_gap) print(rel_gap) print(abs_gap_dollars) } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_ratios.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Percentile Ratios — run_weighted_ratios","title":"Compute Percentile Ratios — run_weighted_ratios","text":"function calculates ratio two percentiles (e.g., P90/P10) dataset list.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_ratios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Percentile Ratios — run_weighted_ratios","text":"","code":"run_weighted_ratios(   data_list,   var_name,   wgt_name = NULL,   upper_percentile,   lower_percentile,   type = c(\"type_4\", \"type_2\"),   na.rm = TRUE )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_ratios.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Percentile Ratios — run_weighted_ratios","text":"data_list named list data frames. var_name string. name variable analyze (e.g., \"dhi\", \"income\"). wgt_name string (optional). name weight variable. NULL, equal weights assumed. upper_percentile numeric scalar (0 1). higher percentile (e.g., 0.9). lower_percentile numeric scalar (0 1). lower percentile (e.g., 0.1). type character string indicating percentile type used compute_weighted_percentiles. Defaults \"type_4\". na.rm Logical. missing values removed computation? Default TRUE.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_ratios.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Percentile Ratios — run_weighted_ratios","text":"named list. element named country contains named numeric vector, names years values percentile ratios.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_ratios.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Percentile Ratios — run_weighted_ratios","text":"upper_percentile less lower_percentile, values automatically swapped warning issued.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_ratios.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Percentile Ratios — run_weighted_ratios","text":"","code":"if (FALSE) { # \\dontrun{ library(lissyrtools) library(purrr)  datasets <- lissyrtools::lissyuse(data = c(\"de\", \"es\", \"uk\"), vars = c(\"dhi\"), from = 2016)  datasets <- datasets %>%   map(~ .x %>% filter(!is.na(dhi))) %>%  map(~ .x %>% mutate(new_wgt = hwgt * nhhmem)) %>%  apply_iqr_top_bottom_coding(\"dhi\", \"hwgt\", type = \"type_2\") %>%  apply_sqrt_equivalisation(\"dhi\")   # Compute dhi  ratios  p90_p10 <- run_weighted_ratios(datasets, var_name = \"dhi\", wgt_name = \"hwgt\",                                  upper_percentile = 0.9, lower_percentile = 0.1)                                  p90_p50 <- run_weighted_ratios(datasets, var_name = \"dhi\", wgt_name = \"hwgt\",                                  upper_percentile = 0.9, lower_percentile = 0.5)                                                                   p80_p20 <- run_weighted_ratios(datasets, var_name = \"dhi\", wgt_name = \"hwgt\",                                  upper_percentile = 0.8, lower_percentile = 0.2)  print(p90_p10) print(p90_p50)  print(p80_p20) } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_relative_poverty.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Relative Poverty Rate — run_weighted_relative_poverty","title":"Compute Relative Poverty Rate — run_weighted_relative_poverty","text":"Compute Relative Poverty Rate","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_relative_poverty.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Relative Poverty Rate — run_weighted_relative_poverty","text":"","code":"run_weighted_relative_poverty(   data_list,   var_name,   wgt_name = NULL,   times_median = 0.5,   type = c(\"type_4\", \"type_2\"),   na.rm = TRUE )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_relative_poverty.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Relative Poverty Rate — run_weighted_relative_poverty","text":"data_list named list data frames. var_name string specifying variable name (e.g., \"dhi\", \"pilabour\"). wgt_name string (optional). name weight variable. NULL, equal weights assumed. times_median numeric scalar. multiple median used define poverty threshold (default 0.5). type character vector indicating percentile estimation type (passed compute_weighted_percentiles). Default \"type_4\". na.rm Logical. missing values removed computation? Default TRUE.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_relative_poverty.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Relative Poverty Rate — run_weighted_relative_poverty","text":"named list. list element named country contains named numeric vector, names years values computed statistics.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/run_weighted_relative_poverty.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Relative Poverty Rate — run_weighted_relative_poverty","text":"","code":"if (FALSE) { # \\dontrun{ library(lissyrtools) library(purrr)  datasets <- lissyrtools::lissyuse(data = c(\"de\", \"es\", \"uk\"), vars = c(\"dhi\"), from = 2016)  # Poverty line is defined at 50%  of the median value by default.   rel_pvt_rate_50 <- datasets %>%   map(~ .x %>% filter(!is.na(dhi))) %>%  map(~ .x %>% mutate(new_wgt = hwgt * nhhmem)) %>%  apply_iqr_top_bottom_coding(\"dhi\", \"hwgt\", type = \"type_2\") %>%  apply_sqrt_equivalisation(\"dhi\") %>%   run_weighted_relative_poverty(\"dhi\", \"new_wgt\")   print(rel_pvt_rate_50)      # It can be defined at other values by specifying the argument `times_median`   rel_pvt_rate_40 <- datasets %>%   map(~ .x %>% filter(!is.na(dhi))) %>%  map(~ .x %>% mutate(new_wgt = hwgt * nhhmem)) %>%  apply_iqr_top_bottom_coding(\"dhi\", \"hwgt\", type = \"type_2\") %>%  apply_sqrt_equivalisation(\"dhi\") %>%   run_weighted_relative_poverty(\"dhi\", \"new_wgt\", times_median = 0.4)   print(rel_pvt_rate_40)    } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/set_lissy_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Set lissy attributes — set_lissy_attributes","title":"Set lissy attributes — set_lissy_attributes","text":"Sets 'level', 'merged_levels' 'database' attributes object equal specified ones.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/set_lissy_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set lissy attributes — set_lissy_attributes","text":"","code":"set_lissy_attributes(lissy_object, lissy_attributes)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/set_lissy_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set lissy attributes — set_lissy_attributes","text":"lissy_object list tibbles tibble. lissy_attributes list three elements: 'level', 'merged_levels' 'database'.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/set_lissy_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set lissy attributes — set_lissy_attributes","text":"type object 'lissy_object'.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/show_countries_lis.html","id":null,"dir":"Reference","previous_headings":"","what":"Print all the country code in LIS — show_countries_lis","title":"Print all the country code in LIS — show_countries_lis","text":"Print country code LIS","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/show_countries_lis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print all the country code in LIS — show_countries_lis","text":"","code":"show_countries_lis()"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/show_countries_lis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print all the country code in LIS — show_countries_lis","text":"data frame.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/show_countries_lis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print all the country code in LIS — show_countries_lis","text":"","code":"show_countries_lis() #>          Australia            Austria            Belgium             Brazil  #>               \"au\"               \"at\"               \"be\"               \"br\"  #>             Canada              Chile              China           Colombia  #>               \"ca\"               \"cl\"               \"cn\"               \"co\"  #>     Czech Republic            Denmark Dominican Republic            Estonia  #>               \"cz\"               \"dk\"               \"do\"               \"ee\"  #>            Finland             France            Georgia            Germany  #>               \"fi\"               \"fr\"               \"ge\"               \"de\"  #>             Greece          Guatemala            Hungary            Iceland  #>               \"gr\"               \"gt\"               \"hu\"               \"is\"  #>              India            Ireland             Israel              Italy  #>               \"in\"               \"ie\"               \"il\"               \"it\"  #>        Ivory Coast              Japan          Lithuania         Luxembourg  #>               \"ci\"               \"jp\"               \"lt\"               \"lu\"  #>               Mali             Mexico        Netherlands             Norway  #>               \"ml\"               \"mx\"               \"nl\"               \"no\"  #>          Palestine             Panama           Paraguay               Peru  #>               \"ps\"               \"pa\"               \"py\"               \"pe\"  #>             Poland            Romania             Russia             Serbia  #>               \"pl\"               \"ro\"               \"ru\"               \"rs\"  #>           Slovakia           Slovenia       South Africa        South Korea  #>               \"sk\"               \"si\"               \"za\"               \"kr\"  #>              Spain             Sweden        Switzerland             Taiwan  #>               \"es\"               \"se\"               \"ch\"               \"tw\"  #>     United Kingdom      United States            Uruguay            Vietnam  #>               \"uk\"               \"us\"               \"uy\"               \"vn\""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/show_countries_lws.html","id":null,"dir":"Reference","previous_headings":"","what":"Print all the country code in LWS — show_countries_lws","title":"Print all the country code in LWS — show_countries_lws","text":"Print country code LWS","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/show_countries_lws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print all the country code in LWS — show_countries_lws","text":"","code":"show_countries_lws()"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/show_countries_lws.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print all the country code in LWS — show_countries_lws","text":"data frame.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/show_countries_lws.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print all the country code in LWS — show_countries_lws","text":"","code":"show_countries_lws() #>      Australia        Austria         Canada          Chile        Denmark  #>           \"au\"           \"at\"           \"ca\"           \"cl\"           \"dk\"  #>        Estonia        Finland         France        Germany         Greece  #>           \"ee\"           \"fi\"           \"fr\"           \"de\"           \"gr\"  #>          Italy          Japan     Luxembourg         Norway       Slovakia  #>           \"it\"           \"jp\"           \"lu\"           \"no\"           \"sk\"  #>       Slovenia   South Africa    South Korea          Spain         Sweden  #>           \"si\"           \"za\"           \"kr\"           \"es\"           \"se\"  #> United Kingdom  United States  #>           \"uk\"           \"us\""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/sort_lissy_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Sort a list of lissy files — sort_lissy_list","title":"Sort a list of lissy files — sort_lissy_list","text":"used within 'merge_dataset_levels()'","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/sort_lissy_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sort a list of lissy files — sort_lissy_list","text":"","code":"sort_lissy_list(list_to_sort, according_to)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/sort_lissy_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sort a list of lissy files — sort_lissy_list","text":"list_to_sort list pfiles hfiles. Names files 'ccyyyydl' format. according_to character vector names list sorted. can format can transformed 'ccyyyyd'.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/sort_lissy_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sort a list of lissy files — sort_lissy_list","text":"Sorts list lissy household person-level files according names passed argument 'according_to'.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/split_consecutive_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Split vector into consecutive values — split_consecutive_values","title":"Split vector into consecutive values — split_consecutive_values","text":"Split vector groups consecutive values.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/split_consecutive_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split vector into consecutive values — split_consecutive_values","text":"","code":"split_consecutive_values(x)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/split_consecutive_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split vector into consecutive values — split_consecutive_values","text":"x vector values split groups.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/structure_to_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform Structured Data Lists into a Tidy Data Frame for Plotting — structure_to_plot","title":"Transform Structured Data Lists into a Tidy Data Frame for Plotting — structure_to_plot","text":"function takes nested list data (three possible structures) transforms tidy data.frame suitable visualization LISSY. supports three structures, typically outputs weighted summary functions lissyrtools : run_weighted_mean(), run_weighted_percentiles(), run_weighted_count().","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/structure_to_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform Structured Data Lists into a Tidy Data Frame for Plotting — structure_to_plot","text":"","code":"structure_to_plot(data_list)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/structure_to_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform Structured Data Lists into a Tidy Data Frame for Plotting — structure_to_plot","text":"data_list named list containing data transformed. structure naming conventions list determine data processed. 1st structure: List country names keys named vectors year-values. Expected names(data_list) country codes matching show_countries_lis() show_countries_lws(). 2nd structure: List ccyy abbreviations keys, named numeric/integer vectors, names represent categories. Typically output functions grouped categorical variable, e.g. \"educ\". 3rd structure: List ccyy abbreviations keys, containing sublists named vectors. Represents complex summaries multiple grouping variables, percentiles, shares.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/structure_to_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform Structured Data Lists into a Tidy Data Frame for Plotting — structure_to_plot","text":"tidy data.frame following columns (depending input structure): cname: Country name. year: Year. dname: Dataset country-year code ccyy form. category: (2nd 3rd structure) Grouping variable categories. share / percentile / by_var: (3rd structure) Variable describing vector names. value: Numeric values input list.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/structure_to_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Transform Structured Data Lists into a Tidy Data Frame for Plotting — structure_to_plot","text":"Depending summary statistics computed , function renames one columns 3rd structure based pattern matching: values contains \"%\" \"-\", column renamed share. values contains \"%\", renamed percentile. Otherwise, renamed by_var.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/structure_to_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform Structured Data Lists into a Tidy Data Frame for Plotting — structure_to_plot","text":"","code":"if (FALSE) { # \\dontrun{  library(ggplot2) library(lissyrtools) library(RColorBrewer) library(ggthemes)  data <- lissyrtools::lissyuse(data = c(\"es\", \"de\"), vars = c(\"dhi\", \"educ\", \"pi11\", \"rural\"), from = 2016)  # Example usage for 1st structure weighted_means <- run_weighted_mean(data, \"pi11\") df1 <- structure_to_plot(weighted_means)  # Example usage for 2nd structure weighted_means_educ <- run_weighted_mean(data, \"pi11\", by = \"educ\") df2 <- structure_to_plot(weighted_means_educ)  # Example usage for 3rd structure weighted_percentiles <- run_weighted_percentiles(data, \"pi11\", by = \"educ\") df3 <- structure_to_plot(weighted_percentiles)  # Example usage for 3rd structure but with shares weighted_percentiles <- run_weighted_percentiles(data, \"pi11\", by = \"educ\", share = TRUE) df3 <- structure_to_plot(weighted_percentiles)    # Chart example: Plotting education group shares over years by country    run_weighted_count(data, \"educ\", percent = TRUE, na.rm = TRUE) %>%   structure_to_plot() %>%   ggplot(aes(x = year, y = value, color = cname, group = interaction(cname, category))) +   geom_line(linewidth = 1.2) +   geom_point(size = 0.6) +   scale_color_stata() +   labs(     x = \"Year\",     y = \"Share of Education Group (%)\",     color = \"Country\"   ) +    expand_limits(y = 0) +    facet_grid(~fct_relevel(category, 'low', 'medium', 'high')) +   theme_bw() +   theme(axis.text.x = element_text(angle = 25, hjust = 1))     # Another example: plotting weighted mean of 'dhi' over years by country data %>%   map(~ .x %>% filter(relation == 1000) %>% mutate(new_wgt = nhhmem * hwgt)) %>%   apply_ppp_adjustment(\"dhi\", \"lis\", \"lisppp\") %>%   run_weighted_mean(\"dhi\", \"new_wgt\") %>%   structure_to_plot() %>%   ggplot(aes(x = year, y = value, color = cname, group = cname)) +   geom_point() +   geom_line() +   labs(     title = \"dhi trend\",     caption = \"Source: Luxembourg Income Study\"   ) +   scale_color_stata() +   scale_y_continuous(labels = scales::comma) +   theme_minimal() +   theme(axis.text.x = element_text(angle = 25, hjust = 1)) } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/testDateTime.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if a value is a date-time object — testDateTime","title":"Test if a value is a date-time object — testDateTime","text":"Function : Frank E Harrell Jr, contributions Charles Dupont many others. (2020). Hmisc: Harrell Miscellaneous. R package version 4.4-1. https://CRAN.R-project.org/package=Hmisc","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/testDateTime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if a value is a date-time object — testDateTime","text":"","code":"testDateTime(x, what = c(\"either\", \"both\", \"timeVaries\"))"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_adjust_by_lisppp.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust aggregates by LIS PPPs — transform_adjust_by_lisppp","title":"Adjust aggregates by LIS PPPs — transform_adjust_by_lisppp","text":"Adjusts aggregate CPI PPP. LWS income variables, takes account reference year dataset variables.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_adjust_by_lisppp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust aggregates by LIS PPPs — transform_adjust_by_lisppp","text":"","code":"transform_adjust_by_lisppp(   lissy_files,   variable,   database = NULL,   income_variable = NULL,   path_to_ppp_file = \"lissyrtools\" )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_adjust_by_lisppp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust aggregates by LIS PPPs — transform_adjust_by_lisppp","text":"lissy_files list LIS LWS files. variable character string name variable adjusted. database 'lis' 'lws' specify database files belong . NULL (default) function reads 'database' attribute list 'lissy_files'. income_variable relevant LWS files. file LWS 'income_variable = TRUE', function retrieve deflator year income data collected. reference year might might one wealth information collected (.e. year file - 2010 'fr10wh'). default NULL checks name variable name income variables LWS files. vector containing list can found lissyrtools::lws_income_variables. Setting argument FALSE forces adjustment use year year file regardless value passed 'variable'. path_to_ppp_file character string indicating deflator values can found. value 'lissyrtools' (default), import data 'lissyrtools'. values equivalent ones : datacenter.org/resources/ppp-deflators/ . Specifying 'lissy' read within LISSY directory. value requires full path specification deflators file.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_adjust_by_lisppp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust aggregates by LIS PPPs — transform_adjust_by_lisppp","text":"list tibbles adjusted variable.","code":""},{"path":[]},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_adjust_by_lisppp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust aggregates by LIS PPPs — transform_adjust_by_lisppp","text":"","code":"if (FALSE) { # \\dontrun{ library(dplyr) library(magrittr) lissy_files <- read_lissy_files(c(\"fr84h\", \"fr94h\", \"fr10h\")) lissy_files %<>%     transform_adjust_by_lisppp(variable = \"dhi\") } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_equivalise.html","id":null,"dir":"Reference","previous_headings":"","what":"Equivalise by number of household members. — transform_equivalise","title":"Equivalise by number of household members. — transform_equivalise","text":"Scales variable dividing 'nhhmem'^eq_scale. 'nhhmem' LIS LWS variable measuring number members household.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_equivalise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Equivalise by number of household members. — transform_equivalise","text":"","code":"transform_equivalise(lissy_files, variable, eq_scale = 0.5)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_equivalise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Equivalise by number of household members. — transform_equivalise","text":"lissy_files list LIS LWS files variable character vector length one indicator needs transformed. eq_scale real number.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_equivalise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Equivalise by number of household members. — transform_equivalise","text":"list tibbles transformed variable.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_equivalise.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Equivalise by number of household members. — transform_equivalise","text":"Throws warning function applied person-level variable.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_equivalise.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Equivalise by number of household members. — transform_equivalise","text":"","code":"if (FALSE) { # \\dontrun{ lissy_files <- read_lissy_files(c(\"fr84h\", \"fr94h\", \"fr10h\")) transform_equivalise(list_files = lissy_files, variable = \"dhi\") } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_equivalise_oecd.html","id":null,"dir":"Reference","previous_headings":"","what":"Equivalise with the OECD scale — transform_equivalise_oecd","title":"Equivalise with the OECD scale — transform_equivalise_oecd","text":"Scales variable using weight adults (excluding first one) children.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_equivalise_oecd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Equivalise with the OECD scale — transform_equivalise_oecd","text":"","code":"transform_equivalise_oecd(   lissy_files,   variable,   value_other_adults = 0.7,   value_children = 0.5 )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_equivalise_oecd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Equivalise with the OECD scale — transform_equivalise_oecd","text":"lissy_files list LIS LWS files variable character vector length one indicator needs transformed. value_other_adults real number. Defaults 0.7. value assigned second last adults household. value_children real number. Defaults 0.7. value assigned children household.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_equivalise_oecd.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Equivalise with the OECD scale — transform_equivalise_oecd","text":"list tibbles transformed variable.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_equivalise_oecd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Equivalise with the OECD scale — transform_equivalise_oecd","text":"Throws warning function applied person-level variable.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_equivalise_oecd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Equivalise with the OECD scale — transform_equivalise_oecd","text":"","code":"if (FALSE) { # \\dontrun{ lissy_files <- read_lissy_files(c(\"fr84h\", \"fr94h\", \"fr10h\")) transform_equivalise_oecd(list_files = lissy_files, variable = \"dhi\") } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_false_zeros_to_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode zeros into missing values if all values are zero — transform_false_zeros_to_na","title":"Recode zeros into missing values if all values are zero — transform_false_zeros_to_na","text":"Recodes zeros selected variable missing values (NAs) () values zeros.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_false_zeros_to_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode zeros into missing values if all values are zero — transform_false_zeros_to_na","text":"","code":"transform_false_zeros_to_na(lissy_files, variable)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_false_zeros_to_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode zeros into missing values if all values are zero — transform_false_zeros_to_na","text":"lissy_files list LIS LWS files. variable character string name variable adjusted.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_false_zeros_to_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode zeros into missing values if all values are zero — transform_false_zeros_to_na","text":"list tibbles adjusted variable.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_false_zeros_to_na.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Recode zeros into missing values if all values are zero — transform_false_zeros_to_na","text":"LIS/LWS datasets variables '0' values. represent 0s NAs. function transform 0s NAs finds values 0s valid values.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_filter_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter a sample by age — transform_filter_age","title":"Filter a sample by age — transform_filter_age","text":"'transform_filter_age()' filter rows LIS/LWS file cases ages two values (included), returning list files containing rows age values. .e. subset rows.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_filter_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter a sample by age — transform_filter_age","text":"","code":"transform_filter_age(lissy_files, from, to)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_filter_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter a sample by age — transform_filter_age","text":"lissy_files list LIS LWS p-level files. integer lower boundary value (included sample). integer higher boundary value (included sample).","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_filter_age.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter a sample by age — transform_filter_age","text":"list tibbles subset rows.","code":""},{"path":[]},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_negative_values_to_zero.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode negative values to zero — transform_negative_values_to_zero","title":"Recode negative values to zero — transform_negative_values_to_zero","text":"Recodes negative values zero files list.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_negative_values_to_zero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode negative values to zero — transform_negative_values_to_zero","text":"","code":"transform_negative_values_to_zero(lissy_files, variable)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_negative_values_to_zero.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode negative values to zero — transform_negative_values_to_zero","text":"lissy_files list LIS LWS files. variable character string name variable transformed.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_negative_values_to_zero.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode negative values to zero — transform_negative_values_to_zero","text":"list tibbles recoded variable.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_negative_values_to_zero.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recode negative values to zero — transform_negative_values_to_zero","text":"","code":"if (FALSE) { # \\dontrun{ library(dplyr) library(magrittr) lissy_files <- read_lissy_files(c(\"fr84h\", \"fr94h\", \"fr10h\")) lissy_files %<>%     transform_negative_values_to_zero(variable = \"dhi\")     } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_restrict_age.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter a variable by age — transform_restrict_age","title":"Filter a variable by age — transform_restrict_age","text":"'transform_restrict_age()' recodes indicated variable NA age outside boundaries. Cases age NA also recoded NA. remove rows outside age boundaries use 'transform_filter_age()' instead.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_restrict_age.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter a variable by age — transform_restrict_age","text":"","code":"transform_restrict_age(lissy_files, variable, from, to)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_restrict_age.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter a variable by age — transform_restrict_age","text":"lissy_files list LIS LWS files. variable character string name variable adjusted.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_restrict_age.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter a variable by age — transform_restrict_age","text":"list tibbles adjusted variable.","code":""},{"path":[]},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_restrict_to_household_heads.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter a variable for household heads — transform_restrict_to_household_heads","title":"Filter a variable for household heads — transform_restrict_to_household_heads","text":"Recodes specified variable NA non-household heads.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_restrict_to_household_heads.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter a variable for household heads — transform_restrict_to_household_heads","text":"","code":"transform_restrict_to_household_heads(lissy_files, variable)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_restrict_to_household_heads.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter a variable for household heads — transform_restrict_to_household_heads","text":"lissy_files list LIS LWS p-level files. variable character string name variable recoded non-household heads.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_restrict_to_household_heads.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter a variable for household heads — transform_restrict_to_household_heads","text":"list tibbles adjusted variable.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_top_code_with_iqr.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply top or bottom coding with log IQR — transform_top_code_with_iqr","title":"Apply top or bottom coding with log IQR — transform_top_code_with_iqr","text":"Applies upper lower limit variable values using Interquartile Range (IQR) variable transformed natural logarithm scale factor ('times').","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_top_code_with_iqr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply top or bottom coding with log IQR — transform_top_code_with_iqr","text":"","code":"transform_top_code_with_iqr(   lissy_files,   variable,   times = 3,   files_level = NULL,   variable_level = NULL,   weight = NULL )  transform_bottom_code_with_iqr(   lissy_files,   variable,   times = 3,   files_level = NULL,   variable_level = NULL,   weight = NULL )"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_top_code_with_iqr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply top or bottom coding with log IQR — transform_top_code_with_iqr","text":"lissy_files list LIS LWS files. variable character string name variable transformed. times numeric indicating scale factor IQR. Defaults 3. files_level string indicating level file. Valid inputs : 'household', 'h', 'person' 'p'. NULL (default), file level retrived 'lissy_files' attributes. variable_level Level variable. either 'household', 'h', 'person' 'p'. NULL (default), function try guess level variable. done comparing value 'variable' pre-set lists variables. weight string name variable 'file' used sample weights.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_top_code_with_iqr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply top or bottom coding with log IQR — transform_top_code_with_iqr","text":"list tibbles recoded variable.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_top_code_with_iqr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply top or bottom coding with log IQR — transform_top_code_with_iqr","text":"lissy files passed person-level variable household-level, household heads used compute IQR log transformed variable. person-level variables, individuals file used.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_weight_by_hh_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Multiply by household size — transform_weight_by_hh_size","title":"Multiply by household size — transform_weight_by_hh_size","text":"Multiplies household weights ('hwgt') number individuals household ('nhhmem'). used computations household level.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_weight_by_hh_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multiply by household size — transform_weight_by_hh_size","text":"","code":"transform_weight_by_hh_size(lissy_files)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_weight_by_hh_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multiply by household size — transform_weight_by_hh_size","text":"lissy_files list LIS LWS files.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_weight_by_hh_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multiply by household size — transform_weight_by_hh_size","text":"list tibbles modified 'hwgt' variable.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_zeros_to_na.html","id":null,"dir":"Reference","previous_headings":"","what":"Recodes zeros into missing values — transform_zeros_to_na","title":"Recodes zeros into missing values — transform_zeros_to_na","text":"Recodes zeros selected variable missing valuse (NAs).","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_zeros_to_na.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recodes zeros into missing values — transform_zeros_to_na","text":"","code":"transform_zeros_to_na(lissy_files, variable)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_zeros_to_na.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recodes zeros into missing values — transform_zeros_to_na","text":"lissy_files list LIS LWS files. variable character string name variable adjusted","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/transform_zeros_to_na.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recodes zeros into missing values — transform_zeros_to_na","text":"list tibbles adjusted variable.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/united_states_16_lis_h.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Household-Level LIS Dataset (1,000 Rows) — united_states_16_lis_h","title":"Sample Household-Level LIS Dataset (1,000 Rows) — united_states_16_lis_h","text":"dataset provides household-level data LIS database 1,000 rows, designed exploration user interaction. automatically loaded lissyuse_locally() whenever United States selected along least one household-level variable (e.g., \"region_c\").","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/united_states_16_lis_h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Household-Level LIS Dataset (1,000 Rows) — united_states_16_lis_h","text":"","code":"united_states_16_lis_h"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/united_states_16_lis_h.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample Household-Level LIS Dataset (1,000 Rows) — united_states_16_lis_h","text":"Data frame 1,000 rows 112 columns.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/united_states_16_lis_h.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample Household-Level LIS Dataset (1,000 Rows) — united_states_16_lis_h","text":"primary purpose dataset, lissyuse_locally() function, allow users build test code locally, simulating execution running LISSY (LIS user interface) using lissyuse() function.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/united_states_16_lis_h.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Household-Level LIS Dataset (1,000 Rows) — united_states_16_lis_h","text":"","code":"if (FALSE) { # \\dontrun{ united_states_16_lis_h } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/united_states_16_lis_p.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Individual-Level LIS Dataset (1,000 Rows) — united_states_16_lis_p","title":"Sample Individual-Level LIS Dataset (1,000 Rows) — united_states_16_lis_p","text":"dataset provides individual-level data LIS database 1,000 rows, designed exploration user interaction. automatically loaded lissyuse_locally() whenever United States selected along least one individual-level variable (e.g., \"age\").","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/united_states_16_lis_p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Individual-Level LIS Dataset (1,000 Rows) — united_states_16_lis_p","text":"","code":"united_states_16_lis_p"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/united_states_16_lis_p.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample Individual-Level LIS Dataset (1,000 Rows) — united_states_16_lis_p","text":"Data frame 1,000 rows 97 columns.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/united_states_16_lis_p.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample Individual-Level LIS Dataset (1,000 Rows) — united_states_16_lis_p","text":"primary purpose dataset, lissyuse_locally() function, allow users build test code locally, simulating execution running LISSY (LIS user interface) using lissyuse() function.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/united_states_16_lis_p.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Individual-Level LIS Dataset (1,000 Rows) — united_states_16_lis_p","text":"","code":"if (FALSE) { # \\dontrun{ united_states_16_lis_p } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/united_states_16_lws_h.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Household-Level LWS Dataset (1,000 Rows) — united_states_16_lws_h","title":"Sample Household-Level LWS Dataset (1,000 Rows) — united_states_16_lws_h","text":"dataset provides household-level data LWS database 1,000 rows, designed exploration user interaction. automatically loaded lissyuse_locally() whenever United States selected along least one household-level variable (e.g., \"region_c\") lws argument set TRUE.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/united_states_16_lws_h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Household-Level LWS Dataset (1,000 Rows) — united_states_16_lws_h","text":"","code":"united_states_16_lws_h"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/united_states_16_lws_h.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample Household-Level LWS Dataset (1,000 Rows) — united_states_16_lws_h","text":"Data frame 1,000 rows 214 columns.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/united_states_16_lws_h.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample Household-Level LWS Dataset (1,000 Rows) — united_states_16_lws_h","text":"primary purpose dataset, lissyuse_locally() function, allow users build test code locally, simulating execution running LISSY (LIS user interface) using lissyuse() function.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/united_states_16_lws_h.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Household-Level LWS Dataset (1,000 Rows) — united_states_16_lws_h","text":"","code":"if (FALSE) { # \\dontrun{ united_states_16_lws_h } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/united_states_16_lws_p.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample Individual-Level LWS Dataset (1,000 Rows) — united_states_16_lws_p","title":"Sample Individual-Level LWS Dataset (1,000 Rows) — united_states_16_lws_p","text":"dataset provides individual-level data LWS database 1,000 rows, designed exploration user interaction. automatically loaded lissyuse_locally() whenever United States selected along least one individual-level variable (e.g., \"age\") lws argument set TRUE.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/united_states_16_lws_p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample Individual-Level LWS Dataset (1,000 Rows) — united_states_16_lws_p","text":"","code":"united_states_16_lws_p"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/united_states_16_lws_p.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample Individual-Level LWS Dataset (1,000 Rows) — united_states_16_lws_p","text":"Data frame 1,000 rows 133 columns.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/united_states_16_lws_p.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Sample Individual-Level LWS Dataset (1,000 Rows) — united_states_16_lws_p","text":"primary purpose dataset, lissyuse_locally() function, allow users build test code locally, simulating execution running LISSY (LIS user interface) using lissyuse() function.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/united_states_16_lws_p.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample Individual-Level LWS Dataset (1,000 Rows) — united_states_16_lws_p","text":"","code":"if (FALSE) { # \\dontrun{ united_states_16_lws_p } # }"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/value_label_c_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Value Labels for Country-Specific Variables in LIS and LWS Datasets — value_label_c_data","title":"Value Labels for Country-Specific Variables in LIS and LWS Datasets — value_label_c_data","text":"data frame containing categorized values country-specific variables LIS LWS datasets, organized country year.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/value_label_c_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Value Labels for Country-Specific Variables in LIS and LWS Datasets — value_label_c_data","text":"","code":"value_label_c_data"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/value_label_c_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Value Labels for Country-Specific Variables in LIS and LWS Datasets — value_label_c_data","text":"data frame 9 variables:","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/variable_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Inspect whether a given variable contains more than just non-missing or non-zero values for a selected group of countries in the LIS or LWS databases. — variable_exists","title":"Inspect whether a given variable contains more than just non-missing or non-zero values for a selected group of countries in the LIS or LWS databases. — variable_exists","text":"Inspect whether given variable contains just non-missing non-zero values selected group countries LIS LWS databases.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/variable_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inspect whether a given variable contains more than just non-missing or non-zero values for a selected group of countries in the LIS or LWS databases. — variable_exists","text":"","code":"variable_exists(variable, iso2, lws = FALSE, share = FALSE)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/variable_exists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inspect whether a given variable contains more than just non-missing or non-zero values for a selected group of countries in the LIS or LWS databases. — variable_exists","text":"variable unit-length character vector containing specified LIS/LWS variables. iso2 character vector valid iso2 codes countries present LIS/LWS. lws logical value, guides tool search LIS LWS database. argument FALSE default, taking LIS database investigated nothing specified. share logical value indicating whether output share datasets, across entire time series country, variable just non-missing non-zero values, instead displaying presence year year.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/variable_exists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inspect whether a given variable contains more than just non-missing or non-zero values for a selected group of countries in the LIS or LWS databases. — variable_exists","text":"list made character vectors. share = TRUE, list numeric vector.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/variable_exists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inspect whether a given variable contains more than just non-missing or non-zero values for a selected group of countries in the LIS or LWS databases. — variable_exists","text":"","code":"variable_exists(variable = \"area_c\", iso2 = \"br\") #> $br #>  1981  1982  1983  1984  1985  1986  1987  1988  1989  1990  1992  1993  1995  #> \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\"  #>  1996  1997  1998  1999  2001  2002  2003  2004  2005  2006  2007  2008  2009  #> \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\"  #>  2011  2012  2013  2014  2015  2016  2017  2018  2019  2020  2021  2022  #> \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\"  #>  variable_exists(variable = \"basb\", iso2 = c(\"fr\", \"de\", \"us\", \"uk\"), lws = TRUE) #> $fr #> 2009 2014 2017 2020  #> \"No\" \"No\" \"No\" \"No\"  #>  #> $de #> 2002 2007 2012 2017  #> \"No\" \"No\" \"No\" \"No\"  #>  #> $us #>  1995  1998  2001  2004  2007  2010  2013  2016  2019  2022  #> \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\"  #>  #> $uk #>  2007  2009  2011  2013  2015  2017  2019  #> \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\"  #>  variable_exists(variable = \"basb\", iso2 = c(\"fr\", \"de\", \"us\", \"uk\"), lws = TRUE, share = TRUE) #> $`Share of years across the series in LWS where: basb has values other than zeros and missings.` #>  de  fr  uk  us  #>   0   0 100 100  #>"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/variable_has_note.html","id":null,"dir":"Reference","previous_headings":"","what":"Verify if a given variable has a note, for a selected group of countries, in LIS or LWS databases. — variable_has_note","title":"Verify if a given variable has a note, for a selected group of countries, in LIS or LWS databases. — variable_has_note","text":"Verify given variable note, selected group countries, LIS LWS databases.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/variable_has_note.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verify if a given variable has a note, for a selected group of countries, in LIS or LWS databases. — variable_has_note","text":"","code":"variable_has_note(variable, iso2, lws = FALSE)"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/variable_has_note.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verify if a given variable has a note, for a selected group of countries, in LIS or LWS databases. — variable_has_note","text":"variable unit-length character vector containing specified LIS/LWS variables. iso2 character vector valid iso2 codes countries present LIS/LWS lws logical value, guides tool search LIS LWS database. argument FALSE defualt, taking LIS databse invetigated nothing specified.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/variable_has_note.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Verify if a given variable has a note, for a selected group of countries, in LIS or LWS databases. — variable_has_note","text":"list, made character vectors. elements corresponds country LIS LWS databases.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/variable_has_note.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Verify if a given variable has a note, for a selected group of countries, in LIS or LWS databases. — variable_has_note","text":"","code":"variable_has_note(variable = \"area_c\", iso2 = \"br\") #> $br #> 1981 1982 1983 1984 1985 1986 1987 1988 1989 1990 1992 1993 1995 1996 1997 1998  #> \"No\" \"No\" \"No\" \"No\" \"No\" \"No\" \"No\" \"No\" \"No\" \"No\" \"No\" \"No\" \"No\" \"No\" \"No\" \"No\"  #> 1999 2001 2002 2003 2004 2005 2006 2007 2008 2009 2011 2012 2013 2014 2015 2016  #> \"No\" \"No\" \"No\" \"No\" \"No\" \"No\" \"No\" \"No\" \"No\" \"No\" \"No\" \"No\" \"No\" \"No\" \"No\" \"No\"  #> 2017 2018 2019 2020 2021 2022  #> \"No\" \"No\" \"No\" \"No\" \"No\" \"No\"  #>  variable_has_note(variable = \"basb\", iso2 = c(\"fr\", \"de\", \"us\", \"uk\"), lws = TRUE) #> $fr #> 2009 2014 2017 2020  #> \"No\" \"No\" \"No\" \"No\"  #>  #> $de #> 2002 2007 2012 2017  #> \"No\" \"No\" \"No\" \"No\"  #>  #> $us #>  1995  1998  2001  2004  2007  2010  2013  2016  2019  2022  #> \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\"  #>  #> $uk #>  2007  2009  2011  2013  2015  2017  2019  #> \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\" \"Yes\"  #>"},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/wtd.quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted statistical Estimates — wtd.quantile","title":"Weighted statistical Estimates — wtd.quantile","text":"Function : Frank E Harrell Jr, contributions Charles Dupont many others. (2020). Hmisc: Harrell Miscellaneous. R package version 4.4-1. https://CRAN.R-project.org/package=Hmisc","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/reference/wtd.quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted statistical Estimates — wtd.quantile","text":"","code":"wtd.quantile(   x,   weights = NULL,   probs = c(0, 0.25, 0.5, 0.75, 1),   type = c(\"quantile\", \"(i-1)/(n-1)\", \"i/(n+1)\", \"i/n\"),   normwt = FALSE,   na.rm = TRUE )  wtd.mean(x, weights = NULL, normwt = \"ignored\", na.rm = TRUE)  wtd.Ecdf(   x,   weights = NULL,   type = c(\"i/n\", \"(i-1)/(n-1)\", \"i/(n+1)\"),   normwt = FALSE,   na.rm = TRUE )  wtd.table(   x,   weights = NULL,   type = c(\"list\", \"table\"),   normwt = FALSE,   na.rm = TRUE )"},{"path":[]},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/news/index.html","id":"change-in-lissyuse-0-1-11","dir":"Changelog","previous_headings":"","what":"Change in lissyuse()","title":"lissyrtools 0.1.11","text":"output lissyuse()now requires explicit assignment variable, whereas previously, function automatically created assigned pre-named list (lis_datasets lws_datasets) global environment.","code":""},{"path":[]},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/news/index.html","id":"introduction-of-lissyuse-0-1-10","dir":"Changelog","previous_headings":"","what":"Introduction of lissyuse()","title":"lissyrtools 0.1.10","text":"new efficient method loading data now available lissyuse(). previous approach, utilized read_lissy_files() merge_dataset_levels(), deprecated moving forward.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/news/index.html","id":"inclusion-of-sample-files-0-1-10","dir":"Changelog","previous_headings":"","what":"Inclusion of sample files","title":"lissyrtools 0.1.10","text":"Inclusion built-data frames containing sample files LIS assist users developing LISSY code scripts local environments.","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/news/index.html","id":"new-built-in-objects-0-1-10","dir":"Changelog","previous_headings":"","what":"New built-in objects","title":"lissyrtools 0.1.10","text":"include datasets data frame, well vector objects containing variables categorized specific groups (e.g., key_vars_household_lis, lis_weight_variables, lws_wealth_categorical_variables, lis_country_specific_variables).","code":""},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/news/index.html","id":"new-show_countries_-and-get_years_-functions-0-1-10","dir":"Changelog","previous_headings":"","what":"New “show_countries_” and “get_years_” functions","title":"lissyrtools 0.1.10","text":"Four new functions added print ISO2 codes country LIS LWS, well available years given country either LIS LWS.","code":""},{"path":[]},{"path":"https://lis-cross-national-data-center.github.io/lissyrtools/news/index.html","id":"bug-fixes-0-1-5","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"lissyrtools 0.1.5","text":"transform_equivalise_oecd() respectively implement_equivalise_oecd() now corrected way classify children argument value_children. Previously argument dependent LIS variable nhhmem17, now uses nhhmem13.","code":""}]
