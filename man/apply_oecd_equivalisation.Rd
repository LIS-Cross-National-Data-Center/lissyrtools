% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/apply_equivalisation.R
\name{apply_oecd_equivalisation}
\alias{apply_oecd_equivalisation}
\title{Apply OECD Equivalence Scale to a Variable}
\usage{
apply_oecd_equivalisation(data_list, var_name, modified = TRUE)
}
\arguments{
\item{data_list}{A named list of data frames, from LIS or LWS microdata.}

\item{var_name}{A string. The name of the variable to be equivalised.}

\item{modified}{Logical. If \code{TRUE} (default), the modified OECD scale is used
(0.5 for additional adults, 0.3 for children). If \code{FALSE}, the original OECD scale
is applied (0.7 for additional adults, 0.5 for children).}
}
\value{
A list of data frames with the equivalised variable.
}
\description{
This function adjusts a household-level variable (such as income or consumption)
using either the standard or modified OECD equivalence scale. It accounts for
household composition by assigning different weights to additional adults and children.
}
\details{
The OECD equivalence scale adjusts household income or consumption to reflect
differences in household needs. It requires:
\itemize{
\item \code{nhhmem}: total number of household members, (always loaded by default already)
\item \code{nhhmem13}: number of household members under 14 years old
}

The scale is computed as:
\itemize{
\item \strong{Standard}: 1 + 0.7 × (additional adults) + 0.5 × (children under 14)
\item \strong{Modified}: 1 + 0.5 × (additional adults) + 0.3 × (children under 14)
}
}
\examples{
\dontrun{
# Import data, ideally at the level of the variable of interest.
# The variable "nhhmem13" must be imported in advance in order to apply OECD-type equivalisation methods.
data_hhd_with_nhhmem13 <- lissyrtools::lissyuse("it", vars = c("dhi", "nhhmem13"), from = 2016)

# Default case: modified OECD scale equivalisation
data_hhd_with_nhhmem13[1]  \%>\%
 purrr::map(~ .x \%>\% filter(!is.na(dhi))) \%>\%
 apply_oecd_equivalisation("dhi")

# Standard OECD scale equivalisation
data_hhd_with_nhhmem13[1]  \%>\%
 purrr::map(~ .x \%>\% filter(!is.na(dhi))) \%>\%
 apply_oecd_equivalisation("dhi", modified = FALSE) 
} 
}
