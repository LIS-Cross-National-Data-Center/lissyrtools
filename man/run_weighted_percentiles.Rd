% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_weighted_functions.R
\name{run_weighted_percentiles}
\alias{run_weighted_percentiles}
\title{Compute Weighted Percentiles Across a List of Data Frames}
\usage{
run_weighted_percentiles(
  data_list,
  var_name,
  wgt_name = NULL,
  probs = seq(0, 1, 0.25),
  share = FALSE,
  na.rm = TRUE
)
}
\arguments{
\item{data_list}{A named list of data frames, typically from multiple countries, years, or datasets.}

\item{var_name}{A string specifying the variable name for which percentiles or shares should be computed.}

\item{wgt_name}{An optional string specifying the weight variable to be used. If \code{NULL}, no weights are applied.}

\item{probs}{A numeric vector of probabilities with values between 0 and 1. Used to determine percentile cutoffs.}

\item{share}{Logical. If \code{TRUE}, returns income shares between percentile brackets instead of the percentile values.}

\item{na.rm}{Logical. If \code{TRUE}, missing values in \code{var_name} or \code{wgt_name} are removed.}
}
\value{
A named list containing the result (numeric vectors) for each element of \code{data_list}, with names inherited from the list.
}
\description{
Applies the \code{compute_weighted_percentiles()} function to each data frame in a named list, using a specified variable and optional weight.
The function returns either percentile values or share values, depending on the \code{share} argument.
}
\details{
Percentiles are computed using the weighted version of \strong{quantile definition 4} from Hyndman and Fan (1996).
When \code{share = TRUE}, the function estimates Lorenz ordinates by taking quantiles from the running sum of the ordered outcome variable (divided by the total),
according to the same quantile definition.
}
\examples{
\dontrun{  

# Import data
my_data_list <- lissyuse(data = "es")

# Retrieve the percentile estimates
percentiles_result <- my_data_list \%>\% 
  transform_negative_values_to_zero("dhi") \%>\%
  run_weighted_percentiles(
    var_name = "dhi",
    wgt_name = "hpopwgt",
    probs = seq(0, 1, 0.1),
    na.rm = TRUE
)
print(percentiles_result)

# Compute the distribution shares
shares_result <- run_weighted_percentiles(
    data_list = my_data_list,
    var_name = "dhi",
    wgt_name = "hpopwgt",
    probs = seq(0, 1, 0.1),
    share = TRUE,
    na.rm = TRUE
)
print(shares_result)
}
}
